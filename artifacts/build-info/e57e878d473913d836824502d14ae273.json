{
	"id": "e57e878d473913d836824502d14ae273",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @title GenericUUPSProxy\n * @dev Generic proxy contract for any UUPS upgradeable contract\n */\ncontract GenericUUPSProxy is ERC1967Proxy {\n    constructor(\n        address implementation,\n        bytes memory _data\n    ) ERC1967Proxy(implementation, _data) {}\n}\n\n/**\n * @title GenericProxyDeployer\n * @dev Helper contract to deploy proxies for any contract with any initialization data\n */\ncontract GenericProxyDeployer {\n    event ProxyDeployed(address indexed proxy, address indexed implementation);\n    \n    /**\n     * @dev Deploy a proxy with custom initialization data\n     * @param implementation Address of the implementation contract\n     * @param initData Encoded initialization function call\n     */\n    function deployProxy(\n        address implementation,\n        bytes calldata initData\n    ) external returns (address) {\n        // Deploy the proxy\n        GenericUUPSProxy proxy = new GenericUUPSProxy(\n            implementation,\n            initData\n        );\n        \n        emit ProxyDeployed(address(proxy), implementation);\n        return address(proxy);\n    }\n    \n    /**\n     * @dev Deploy a proxy without initialization (for contracts with no initializer)\n     * @param implementation Address of the implementation contract\n     */\n    function deployProxyWithoutInit(\n        address implementation\n    ) external returns (address) {\n        // Deploy the proxy with empty initialization data\n        GenericUUPSProxy proxy = new GenericUUPSProxy(\n            implementation,\n            \"\"\n        );\n        \n        emit ProxyDeployed(address(proxy), implementation);\n        return address(proxy);\n    }\n}"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.22;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 300
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_5\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1185:1199  implementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1201:1206  _data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n  tag_6\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  jump(tag_47)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_6:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  tag_9\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n  tag_10\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  tag_12\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n  tag_13\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  tag_15\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n  tag_16\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe0, 0x4c9c8ce3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1652:1684   */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1634:1685   */\n  mstore\n    /* \"#utility.yul\":1607:1625   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n  mload(0x40)\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_28\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_27)\ntag_28:\n  0x60\n  swap2\n  pop\ntag_27:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n  tag_29\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n  tag_30\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n  swap6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\ntag_16:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mload(0x40)\n  shl(0xe0, 0xb398979f)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n  tag_36\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n  tag_37\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_39\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n  dup5\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1652:1684   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1634:1685   */\n  mstore\n    /* \"#utility.yul\":1607:1625   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  tag_19\n    /* \"#utility.yul\":1488:1691   */\n  jump\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_40:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\ntag_37:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n  mload(0x40)\n  shl(0xe0, 0xd6bda275)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":14:141   */\ntag_45:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_46:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_50:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_50)\ntag_52:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1483   */\ntag_2:\n    /* \"#utility.yul\":489:495   */\n  0x00\n    /* \"#utility.yul\":497:503   */\n  dup1\n    /* \"#utility.yul\":550:552   */\n  0x40\n    /* \"#utility.yul\":538:547   */\n  dup4\n    /* \"#utility.yul\":529:536   */\n  dup6\n    /* \"#utility.yul\":525:548   */\n  sub\n    /* \"#utility.yul\":521:553   */\n  slt\n    /* \"#utility.yul\":518:570   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":518:570   */\ntag_54:\n    /* \"#utility.yul\":592:608   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":637:668   */\n  dup2\n  and\n    /* \"#utility.yul\":627:669   */\n  dup2\n  eq\n    /* \"#utility.yul\":617:687   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":683:684   */\n  0x00\n    /* \"#utility.yul\":680:681   */\n  dup1\n    /* \"#utility.yul\":673:685   */\n  revert\n    /* \"#utility.yul\":617:687   */\ntag_55:\n    /* \"#utility.yul\":755:757   */\n  0x20\n    /* \"#utility.yul\":740:758   */\n  dup5\n  add\n    /* \"#utility.yul\":734:759   */\n  mload\n    /* \"#utility.yul\":706:711   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":771:801   */\n  dup2\n  gt\n    /* \"#utility.yul\":768:818   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":814:815   */\n  0x00\n    /* \"#utility.yul\":811:812   */\n  dup1\n    /* \"#utility.yul\":804:816   */\n  revert\n    /* \"#utility.yul\":768:818   */\ntag_56:\n    /* \"#utility.yul\":837:859   */\n  dup4\n  add\n    /* \"#utility.yul\":890:894   */\n  0x1f\n    /* \"#utility.yul\":882:895   */\n  dup2\n  add\n    /* \"#utility.yul\":878:905   */\n  dup6\n  sgt\n    /* \"#utility.yul\":868:923   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":919:920   */\n  0x00\n    /* \"#utility.yul\":916:917   */\n  dup1\n    /* \"#utility.yul\":909:921   */\n  revert\n    /* \"#utility.yul\":868:923   */\ntag_57:\n    /* \"#utility.yul\":946:955   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":967:997   */\n  dup2\n  gt\n    /* \"#utility.yul\":964:1020   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1000:1018   */\n  tag_59\n  tag_45\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1049:1051   */\n  0x40\n    /* \"#utility.yul\":1043:1052   */\n  mload\n    /* \"#utility.yul\":1141:1143   */\n  0x1f\n    /* \"#utility.yul\":1103:1120   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1099:1130   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1132:1134   */\n  0x3f\n    /* \"#utility.yul\":1095:1135   */\n  add\n    /* \"#utility.yul\":1091:1145   */\n  and\n    /* \"#utility.yul\":1079:1146   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1161:1195   */\n  dup2\n  gt\n    /* \"#utility.yul\":1197:1219   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":1158:1220   */\n  or\n    /* \"#utility.yul\":1155:1243   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1223:1241   */\n  tag_61\n  tag_45\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1259:1261   */\n  0x40\n    /* \"#utility.yul\":1252:1274   */\n  mstore\n    /* \"#utility.yul\":1283:1305   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":1324:1339   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":1341:1343   */\n  0x20\n    /* \"#utility.yul\":1320:1344   */\n  add\n    /* \"#utility.yul\":1317:1354   */\n  dup8\n  lt\n    /* \"#utility.yul\":1314:1371   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1367:1368   */\n  0x00\n    /* \"#utility.yul\":1364:1365   */\n  dup1\n    /* \"#utility.yul\":1357:1369   */\n  revert\n    /* \"#utility.yul\":1314:1371   */\ntag_62:\n    /* \"#utility.yul\":1380:1452   */\n  tag_63\n    /* \"#utility.yul\":1445:1451   */\n  dup3\n    /* \"#utility.yul\":1440:1442   */\n  0x20\n    /* \"#utility.yul\":1432:1438   */\n  dup4\n    /* \"#utility.yul\":1428:1443   */\n  add\n    /* \"#utility.yul\":1423:1425   */\n  0x20\n    /* \"#utility.yul\":1419:1421   */\n  dup7\n    /* \"#utility.yul\":1415:1426   */\n  add\n    /* \"#utility.yul\":1380:1452   */\n  tag_46\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1471:1477   */\n  dup1\n    /* \"#utility.yul\":1461:1477   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":401:1483   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1696:1983   */\ntag_25:\n    /* \"#utility.yul\":1825:1828   */\n  0x00\n    /* \"#utility.yul\":1863:1869   */\n  dup3\n    /* \"#utility.yul\":1857:1870   */\n  mload\n    /* \"#utility.yul\":1879:1945   */\n  tag_66\n    /* \"#utility.yul\":1938:1944   */\n  dup2\n    /* \"#utility.yul\":1933:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1930   */\n  0x20\n    /* \"#utility.yul\":1918:1924   */\n  dup8\n    /* \"#utility.yul\":1914:1931   */\n  add\n    /* \"#utility.yul\":1879:1945   */\n  tag_46\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1961:1977   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":1696:1983   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_47:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n      tag_13\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n    tag_13:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup1\n      iszero\n      tag_17\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa26469706673582212209248c967aa23b541110fe189462dd2ac54bf1fb1e345dd2b486ce43f1ac3f84c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_351": {
									"entryPoint": 389,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_657": {
									"entryPoint": 517,
									"id": 657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_131": {
									"entryPoint": 146,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_575": {
									"entryPoint": 270,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_167": {
									"entryPoint": 51,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 422,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1985:9",
										"nodeType": "YulBlock",
										"src": "0:1985:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:9",
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:9",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:9",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:9",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nativeSrc": "66:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nativeSrc": "56:31:9",
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nativeSrc": "56:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:9",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:9",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nativeSrc": "96:15:9",
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nativeSrc": "96:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:9",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:9",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nativeSrc": "120:15:9",
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nativeSrc": "120:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nativeSrc": "212:184:9",
													"nodeType": "YulBlock",
													"src": "212:184:9",
													"statements": [
														{
															"nativeSrc": "222:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "222:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "231:1:9",
																"nodeType": "YulLiteral",
																"src": "231:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "226:1:9",
																	"nodeType": "YulTypedName",
																	"src": "226:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "291:63:9",
																"nodeType": "YulBlock",
																"src": "291:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "316:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "316:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "321:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "321:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "312:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "312:3:9"
																					},
																					"nativeSrc": "312:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "312:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "335:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "340:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "340:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "331:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "331:3:9"
																							},
																							"nativeSrc": "331:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "331:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "325:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "325:5:9"
																					},
																					"nativeSrc": "325:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "325:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "305:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:9"
																			},
																			"nativeSrc": "305:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "305:39:9"
																		},
																		"nativeSrc": "305:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "305:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "252:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "252:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "255:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "255:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "249:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "249:2:9"
																},
																"nativeSrc": "249:13:9",
																"nodeType": "YulFunctionCall",
																"src": "249:13:9"
															},
															"nativeSrc": "241:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "263:19:9",
																"nodeType": "YulBlock",
																"src": "263:19:9",
																"statements": [
																	{
																		"nativeSrc": "265:15:9",
																		"nodeType": "YulAssignment",
																		"src": "265:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "274:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "274:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:2:9",
																					"nodeType": "YulLiteral",
																					"src": "277:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "270:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:9"
																			},
																			"nativeSrc": "270:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "270:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "265:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "265:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "245:3:9",
																"nodeType": "YulBlock",
																"src": "245:3:9",
																"statements": []
															},
															"src": "241:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "374:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "379:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:9"
																		},
																		"nativeSrc": "370:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "370:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "388:1:9",
																		"nodeType": "YulLiteral",
																		"src": "388:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "363:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:9"
																},
																"nativeSrc": "363:27:9",
																"nodeType": "YulFunctionCall",
																"src": "363:27:9"
															},
															"nativeSrc": "363:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "363:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "146:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "190:3:9",
														"nodeType": "YulTypedName",
														"src": "190:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "195:3:9",
														"nodeType": "YulTypedName",
														"src": "195:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "200:6:9",
														"nodeType": "YulTypedName",
														"src": "200:6:9",
														"type": ""
													}
												],
												"src": "146:250:9"
											},
											{
												"body": {
													"nativeSrc": "508:975:9",
													"nodeType": "YulBlock",
													"src": "508:975:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "554:16:9",
																"nodeType": "YulBlock",
																"src": "554:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "563:1:9",
																					"nodeType": "YulLiteral",
																					"src": "563:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "566:1:9",
																					"nodeType": "YulLiteral",
																					"src": "566:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "556:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "556:6:9"
																			},
																			"nativeSrc": "556:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "556:12:9"
																		},
																		"nativeSrc": "556:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "556:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "529:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "529:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "538:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "525:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:9"
																		},
																		"nativeSrc": "525:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "525:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:9",
																		"nodeType": "YulLiteral",
																		"src": "550:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "521:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:9"
																},
																"nativeSrc": "521:32:9",
																"nodeType": "YulFunctionCall",
																"src": "521:32:9"
															},
															"nativeSrc": "518:52:9",
															"nodeType": "YulIf",
															"src": "518:52:9"
														},
														{
															"nativeSrc": "579:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "579:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "598:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "592:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:9"
																},
																"nativeSrc": "592:16:9",
																"nodeType": "YulFunctionCall",
																"src": "592:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "583:5:9",
																	"nodeType": "YulTypedName",
																	"src": "583:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "671:16:9",
																"nodeType": "YulBlock",
																"src": "671:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "683:1:9",
																					"nodeType": "YulLiteral",
																					"src": "683:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "673:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:9"
																			},
																			"nativeSrc": "673:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:9"
																		},
																		"nativeSrc": "673:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "630:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "641:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "641:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "656:3:9",
																										"nodeType": "YulLiteral",
																										"src": "656:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "661:1:9",
																										"nodeType": "YulLiteral",
																										"src": "661:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "652:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "652:3:9"
																								},
																								"nativeSrc": "652:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "652:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "665:1:9",
																								"nodeType": "YulLiteral",
																								"src": "665:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "648:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "648:3:9"
																						},
																						"nativeSrc": "648:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "648:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "637:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:9"
																				},
																				"nativeSrc": "637:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "637:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "627:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:9"
																		},
																		"nativeSrc": "627:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "627:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "620:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:9"
																},
																"nativeSrc": "620:50:9",
																"nodeType": "YulFunctionCall",
																"src": "620:50:9"
															},
															"nativeSrc": "617:70:9",
															"nodeType": "YulIf",
															"src": "617:70:9"
														},
														{
															"nativeSrc": "696:15:9",
															"nodeType": "YulAssignment",
															"src": "696:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "706:5:9",
																"nodeType": "YulIdentifier",
																"src": "706:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "696:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:9"
																}
															]
														},
														{
															"nativeSrc": "720:39:9",
															"nodeType": "YulVariableDeclaration",
															"src": "720:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "744:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "744:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "755:2:9",
																				"nodeType": "YulLiteral",
																				"src": "755:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "740:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:9"
																		},
																		"nativeSrc": "740:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "740:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "734:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:9"
																},
																"nativeSrc": "734:25:9",
																"nodeType": "YulFunctionCall",
																"src": "734:25:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "724:6:9",
																	"nodeType": "YulTypedName",
																	"src": "724:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "802:16:9",
																"nodeType": "YulBlock",
																"src": "802:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "811:1:9",
																					"nodeType": "YulLiteral",
																					"src": "811:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "814:1:9",
																					"nodeType": "YulLiteral",
																					"src": "814:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "804:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "804:6:9"
																			},
																			"nativeSrc": "804:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "804:12:9"
																		},
																		"nativeSrc": "804:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "774:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "790:2:9",
																						"nodeType": "YulLiteral",
																						"src": "790:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "794:1:9",
																						"nodeType": "YulLiteral",
																						"src": "794:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "786:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "786:3:9"
																				},
																				"nativeSrc": "786:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "786:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "798:1:9",
																				"nodeType": "YulLiteral",
																				"src": "798:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "782:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:9"
																		},
																		"nativeSrc": "782:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "782:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "771:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "771:2:9"
																},
																"nativeSrc": "771:30:9",
																"nodeType": "YulFunctionCall",
																"src": "771:30:9"
															},
															"nativeSrc": "768:50:9",
															"nodeType": "YulIf",
															"src": "768:50:9"
														},
														{
															"nativeSrc": "827:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "827:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "841:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "841:9:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "852:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "852:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "837:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:9"
																},
																"nativeSrc": "837:22:9",
																"nodeType": "YulFunctionCall",
																"src": "837:22:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "831:2:9",
																	"nodeType": "YulTypedName",
																	"src": "831:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "907:16:9",
																"nodeType": "YulBlock",
																"src": "907:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "916:1:9",
																					"nodeType": "YulLiteral",
																					"src": "916:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "919:1:9",
																					"nodeType": "YulLiteral",
																					"src": "919:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "909:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "909:6:9"
																			},
																			"nativeSrc": "909:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "909:12:9"
																		},
																		"nativeSrc": "909:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "909:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "886:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "886:2:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "890:4:9",
																						"nodeType": "YulLiteral",
																						"src": "890:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "882:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "882:3:9"
																				},
																				"nativeSrc": "882:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "882:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "897:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "897:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "878:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:9"
																		},
																		"nativeSrc": "878:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "878:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "871:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:9"
																},
																"nativeSrc": "871:35:9",
																"nodeType": "YulFunctionCall",
																"src": "871:35:9"
															},
															"nativeSrc": "868:55:9",
															"nodeType": "YulIf",
															"src": "868:55:9"
														},
														{
															"nativeSrc": "932:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "932:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "952:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "952:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "946:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "946:5:9"
																},
																"nativeSrc": "946:9:9",
																"nodeType": "YulFunctionCall",
																"src": "946:9:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "936:6:9",
																	"nodeType": "YulTypedName",
																	"src": "936:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "998:22:9",
																"nodeType": "YulBlock",
																"src": "998:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1000:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1000:16:9"
																			},
																			"nativeSrc": "1000:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1000:18:9"
																		},
																		"nativeSrc": "1000:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1000:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "986:2:9",
																						"nodeType": "YulLiteral",
																						"src": "986:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "990:1:9",
																						"nodeType": "YulLiteral",
																						"src": "990:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "982:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "982:3:9"
																				},
																				"nativeSrc": "982:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "982:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "994:1:9",
																				"nodeType": "YulLiteral",
																				"src": "994:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "978:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:9"
																		},
																		"nativeSrc": "978:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "978:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "967:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "967:2:9"
																},
																"nativeSrc": "967:30:9",
																"nodeType": "YulFunctionCall",
																"src": "967:30:9"
															},
															"nativeSrc": "964:56:9",
															"nodeType": "YulIf",
															"src": "964:56:9"
														},
														{
															"nativeSrc": "1029:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1049:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1043:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1043:5:9"
																},
																"nativeSrc": "1043:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1043:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1033:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1033:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1061:85:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1061:85:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1083:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1083:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "1107:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "1107:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1115:4:9",
																										"nodeType": "YulLiteral",
																										"src": "1115:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1103:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1103:3:9"
																								},
																								"nativeSrc": "1103:17:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1103:17:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1126:2:9",
																										"nodeType": "YulLiteral",
																										"src": "1126:2:9",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1122:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1122:3:9"
																								},
																								"nativeSrc": "1122:7:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1122:7:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1099:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1099:3:9"
																						},
																						"nativeSrc": "1099:31:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1099:31:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1132:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1132:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1095:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:9"
																				},
																				"nativeSrc": "1095:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1095:40:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1141:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1141:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1137:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1137:3:9"
																				},
																				"nativeSrc": "1137:7:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1137:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1091:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:9"
																		},
																		"nativeSrc": "1091:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1091:54:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1079:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1079:3:9"
																},
																"nativeSrc": "1079:67:9",
																"nodeType": "YulFunctionCall",
																"src": "1079:67:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1065:10:9",
																	"nodeType": "YulTypedName",
																	"src": "1065:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1221:22:9",
																"nodeType": "YulBlock",
																"src": "1221:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1223:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1223:16:9"
																			},
																			"nativeSrc": "1223:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1223:18:9"
																		},
																		"nativeSrc": "1223:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1164:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1164:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1184:2:9",
																								"nodeType": "YulLiteral",
																								"src": "1184:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1188:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1188:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1180:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1180:3:9"
																						},
																						"nativeSrc": "1180:10:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1180:10:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1192:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1192:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1176:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1176:3:9"
																				},
																				"nativeSrc": "1176:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1176:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1161:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1161:2:9"
																		},
																		"nativeSrc": "1161:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1200:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1200:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1212:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1212:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1197:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1197:2:9"
																		},
																		"nativeSrc": "1197:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1197:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1158:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1158:2:9"
																},
																"nativeSrc": "1158:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1158:62:9"
															},
															"nativeSrc": "1155:88:9",
															"nodeType": "YulIf",
															"src": "1155:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1259:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1259:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1263:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1263:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1252:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:9"
																},
																"nativeSrc": "1252:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1252:22:9"
															},
															"nativeSrc": "1252:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1252:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1290:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1290:6:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1298:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1298:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1283:6:9"
																},
																"nativeSrc": "1283:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1283:22:9"
															},
															"nativeSrc": "1283:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1283:22:9"
														},
														{
															"body": {
																"nativeSrc": "1355:16:9",
																"nodeType": "YulBlock",
																"src": "1355:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1364:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1364:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1367:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1367:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1357:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:9"
																			},
																			"nativeSrc": "1357:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1357:12:9"
																		},
																		"nativeSrc": "1357:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1328:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1328:2:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1332:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1332:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1324:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:9"
																				},
																				"nativeSrc": "1324:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1324:15:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1341:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1341:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:9"
																		},
																		"nativeSrc": "1320:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1346:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1346:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1317:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1317:2:9"
																},
																"nativeSrc": "1317:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1317:37:9"
															},
															"nativeSrc": "1314:57:9",
															"nodeType": "YulIf",
															"src": "1314:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1419:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1419:2:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1423:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:9"
																		},
																		"nativeSrc": "1415:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1432:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1432:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1440:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1440:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1428:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:9"
																		},
																		"nativeSrc": "1428:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1428:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1445:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1445:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1380:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1380:34:9"
																},
																"nativeSrc": "1380:72:9",
																"nodeType": "YulFunctionCall",
																"src": "1380:72:9"
															},
															"nativeSrc": "1380:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "1380:72:9"
														},
														{
															"nativeSrc": "1461:16:9",
															"nodeType": "YulAssignment",
															"src": "1461:16:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1471:6:9",
																"nodeType": "YulIdentifier",
																"src": "1471:6:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1461:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "401:1082:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "466:9:9",
														"nodeType": "YulTypedName",
														"src": "466:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "477:7:9",
														"nodeType": "YulTypedName",
														"src": "477:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "489:6:9",
														"nodeType": "YulTypedName",
														"src": "489:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "497:6:9",
														"nodeType": "YulTypedName",
														"src": "497:6:9",
														"type": ""
													}
												],
												"src": "401:1082:9"
											},
											{
												"body": {
													"nativeSrc": "1589:102:9",
													"nodeType": "YulBlock",
													"src": "1589:102:9",
													"statements": [
														{
															"nativeSrc": "1599:26:9",
															"nodeType": "YulAssignment",
															"src": "1599:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1611:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1611:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1622:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1607:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:9"
																},
																"nativeSrc": "1607:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1607:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1599:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1599:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1641:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1641:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1656:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1672:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1672:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1677:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1677:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1668:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1668:3:9"
																						},
																						"nativeSrc": "1668:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1668:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1681:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1681:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1664:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1664:3:9"
																				},
																				"nativeSrc": "1664:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1664:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:9"
																		},
																		"nativeSrc": "1652:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1652:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:9"
																},
																"nativeSrc": "1634:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1634:51:9"
															},
															"nativeSrc": "1634:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1634:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1488:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1558:9:9",
														"nodeType": "YulTypedName",
														"src": "1558:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1569:6:9",
														"nodeType": "YulTypedName",
														"src": "1569:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1580:4:9",
														"nodeType": "YulTypedName",
														"src": "1580:4:9",
														"type": ""
													}
												],
												"src": "1488:203:9"
											},
											{
												"body": {
													"nativeSrc": "1833:150:9",
													"nodeType": "YulBlock",
													"src": "1833:150:9",
													"statements": [
														{
															"nativeSrc": "1843:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1843:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1863:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1863:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1857:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1857:5:9"
																},
																"nativeSrc": "1857:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1857:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1847:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1847:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1918:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1918:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1926:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1926:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1914:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1914:3:9"
																		},
																		"nativeSrc": "1914:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1914:17:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1933:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1933:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1938:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1938:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1879:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1879:34:9"
																},
																"nativeSrc": "1879:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1879:66:9"
															},
															"nativeSrc": "1879:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "1879:66:9"
														},
														{
															"nativeSrc": "1954:23:9",
															"nodeType": "YulAssignment",
															"src": "1954:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1965:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1965:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1961:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:9"
																},
																"nativeSrc": "1961:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1961:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1696:287:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1809:3:9",
														"nodeType": "YulTypedName",
														"src": "1809:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1814:6:9",
														"nodeType": "YulTypedName",
														"src": "1814:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1825:3:9",
														"nodeType": "YulTypedName",
														"src": "1825:3:9",
														"type": ""
													}
												],
												"src": "1696:287:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), length)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405161041d38038061041d83398101604081905261002291610268565b61002c8282610033565b5050610358565b61003c82610092565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561008657610081828261010e565b505050565b61008e610185565b5050565b806001600160a01b03163b6000036100cd57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161012b919061033c565b600060405180830381855af49150503d8060008114610166576040519150601f19603f3d011682016040523d82523d6000602084013e61016b565b606091505b50909250905061017c8583836101a6565b95945050505050565b34156101a45760405163b398979f60e01b815260040160405180910390fd5b565b6060826101bb576101b682610205565b6101fe565b81511580156101d257506001600160a01b0384163b155b156101fb57604051639996b31560e01b81526001600160a01b03851660048201526024016100c4565b50805b9392505050565b8051156102155780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b8381101561025f578181015183820152602001610247565b50506000910152565b6000806040838503121561027b57600080fd5b82516001600160a01b038116811461029257600080fd5b60208401519092506001600160401b038111156102ae57600080fd5b8301601f810185136102bf57600080fd5b80516001600160401b038111156102d8576102d861022e565b604051601f8201601f19908116603f011681016001600160401b03811182821017156103065761030661022e565b60405281815282820160200187101561031e57600080fd5b61032f826020830160208601610244565b8093505050509250929050565b6000825161034e818460208701610244565b9190910192915050565b60b7806103666000396000f3fe6080604052600a600c565b005b60186014601a565b605e565b565b600060597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e808015607c573d6000f35b3d6000fdfea26469706673582212209248c967aa23b541110fe189462dd2ac54bf1fb1e345dd2b486ce43f1ac3f84c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x41D CODESIZE SUB DUP1 PUSH2 0x41D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x268 JUMP JUMPDEST PUSH2 0x2C DUP3 DUP3 PUSH2 0x33 JUMP JUMPDEST POP POP PUSH2 0x358 JUMP JUMPDEST PUSH2 0x3C DUP3 PUSH2 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x86 JUMPI PUSH2 0x81 DUP3 DUP3 PUSH2 0x10E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8E PUSH2 0x185 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x17C DUP6 DUP4 DUP4 PUSH2 0x1A6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1BB JUMPI PUSH2 0x1B6 DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC4 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x215 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x247 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D8 PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x306 JUMPI PUSH2 0x306 PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32F DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x34E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x244 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB7 DUP1 PUSH2 0x366 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x59 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 BASEFEE 0xC9 PUSH8 0xAA23B541110FE189 CHAINID 0x2D 0xD2 0xAC SLOAD 0xBF 0x1F 0xB1 0xE3 GASLIMIT 0xDD 0x2B BASEFEE PUSH13 0xE43F1AC3F84C64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "600:1117:1:-:0;;;1081:133;;;;;;;;;;;;;;;;;;:::i;:::-;1155:52;1185:14;1201:5;1155:29;:52::i;:::-;1081:133;;600:1117;;2264:344:2;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:2;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2264:344;;:::o;2454:148::-;2573:18;:16;:18::i;:::-;2264:344;;:::o;1671:281::-;1748:17;-1:-1:-1;;;;;1748:29:2;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:2;;-1:-1:-1;;;;;1652:32:9;;1805:47:2;;;1634:51:9;1607:18;;1805:47:2;;;;;;;;1744:119;811:66;1872:73;;-1:-1:-1;;;;;;1872:73:2;-1:-1:-1;;;;;1872:73:2;;;;;;;;;;1671:281::o;3916:253:5:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:5;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4023:67:5;;-1:-1:-1;4023:67:5;-1:-1:-1;4107:55:5;4134:6;4023:67;;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:5:o;6113:122:2:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:2;;;;;;;;;;;6159:70;6113:122::o;4437:582:5:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:5;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:5;;-1:-1:-1;;;;;1652:32:9;;4933:24:5;;;1634:51:9;1607:18;;4933:24:5;1488:203:9;4853:119:5;-1:-1:-1;4992:10:5;4605:408;4437:582;;;;;:::o;5559:487::-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:5;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:9;370:16;;363:27;146:250::o;401:1082::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:9;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;771:30:9;;768:50;;;814:1;811;804:12;768:50;837:22;;890:4;882:13;;878:27;-1:-1:-1;868:55:9;;919:1;916;909:12;868:55;946:9;;-1:-1:-1;;;;;967:30:9;;964:56;;;1000:18;;:::i;:::-;1049:2;1043:9;1141:2;1103:17;;-1:-1:-1;;1099:31:9;;;1132:2;1095:40;1091:54;1079:67;;-1:-1:-1;;;;;1161:34:9;;1197:22;;;1158:62;1155:88;;;1223:18;;:::i;:::-;1259:2;1252:22;1283;;;1324:15;;;1341:2;1320:24;1317:37;-1:-1:-1;1314:57:9;;;1367:1;1364;1357:12;1314:57;1380:72;1445:6;1440:2;1432:6;1428:15;1423:2;1419;1415:11;1380:72;:::i;:::-;1471:6;1461:16;;;;;401:1082;;;;;:::o;1696:287::-;1825:3;1863:6;1857:13;1879:66;1938:6;1933:3;1926:4;1918:6;1914:17;1879:66;:::i;:::-;1961:16;;;;;1696:287;-1:-1:-1;;1696:287:9:o;:::-;600:1117:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_363": {
									"entryPoint": 94,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_379": {
									"entryPoint": 12,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_57": {
									"entryPoint": 26,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b60186014601a565b605e565b565b600060597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e808015607c573d6000f35b3d6000fdfea26469706673582212209248c967aa23b541110fe189462dd2ac54bf1fb1e345dd2b486ce43f1ac3f84c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x59 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 BASEFEE 0xC9 PUSH8 0xAA23B541110FE189 CHAINID 0x2D 0xD2 0xAC SLOAD 0xBF 0x1F 0xB1 0xE3 GASLIMIT 0xDD 0x2B BASEFEE PUSH13 0xE43F1AC3F84C64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "600:1117:1:-:0;;;2649:11:3;:9;:11::i;:::-;600:1117:1;2323:83:3;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1583:132:1:-;1650:7;1676:32;811:66:2;1519:53;;;;1441:138;1676:32:1;1669:39;;1583:132;:::o;949:895:3:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2144"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1081,
									"end": 1214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1185,
									"end": 1199,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1155,
									"end": 1207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2374,
									"end": 2391,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2355,
									"end": 2392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2473,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2518,
									"end": 2535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2537,
									"end": 2541,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2489,
									"end": 2542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2573,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2573,
									"end": 2591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1748,
									"end": 1765,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1782,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1634,
									"end": 1685,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 811,
									"end": 877,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1952,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3999,
									"end": 4011,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4024,
									"end": 4036,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4038,
									"end": 4061,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4071,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4084,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4085,
									"end": 4089,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 4065,
									"end": 4090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DELEGATECALL",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 4134,
									"end": 4140,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4107,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4107,
									"end": 4162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4100,
									"end": 4162,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3916,
									"end": 4169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6163,
									"end": 6172,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6163,
									"end": 6176,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4581,
									"end": 4593,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4610,
									"end": 4617,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 4641,
									"end": 4651,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4640,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 4633,
									"end": 4652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4874,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4874,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4879,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4906,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1685,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1488,
									"end": 1691,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4992,
									"end": 5002,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5559,
									"end": 6046,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 5559,
									"end": 6046,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5707,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5711,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5887,
									"end": 5897,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5881,
									"end": 5898,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5943,
									"end": 5958,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5930,
									"end": 5940,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5926,
									"end": 5928,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5922,
									"end": 5941,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5915,
									"end": 5959,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D6BDA275"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 396,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 146,
									"end": 396,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 231,
									"end": 232,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 255,
									"end": 261,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 252,
									"end": 253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 249,
									"end": 262,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 331,
									"end": 342,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 325,
									"end": 343,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 312,
									"end": 323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 305,
									"end": 344,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 280,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 386,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 370,
									"end": 386,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 363,
									"end": 390,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 146,
									"end": 396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 489,
									"end": 495,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 503,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 547,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 529,
									"end": 536,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 525,
									"end": 548,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 521,
									"end": 553,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 518,
									"end": 570,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 518,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 518,
									"end": 570,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 592,
									"end": 608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 592,
									"end": 608,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 627,
									"end": 669,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 627,
									"end": 669,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 617,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 683,
									"end": 684,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 681,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 673,
									"end": 685,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 617,
									"end": 687,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 755,
									"end": 757,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 740,
									"end": 758,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 734,
									"end": 759,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 771,
									"end": 801,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 771,
									"end": 801,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 768,
									"end": 818,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 768,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 768,
									"end": 818,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 814,
									"end": 815,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 812,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 816,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 768,
									"end": 818,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 768,
									"end": 818,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 837,
									"end": 859,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 837,
									"end": 859,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 890,
									"end": 894,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 882,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 882,
									"end": 895,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 878,
									"end": 905,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 868,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 868,
									"end": 923,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 919,
									"end": 920,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 917,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 909,
									"end": 921,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 868,
									"end": 923,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 868,
									"end": 923,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 946,
									"end": 955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 946,
									"end": 955,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 967,
									"end": 997,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 967,
									"end": 997,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1000,
									"end": 1018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1052,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1103,
									"end": 1120,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1103,
									"end": 1120,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1134,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 1095,
									"end": 1135,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1091,
									"end": 1145,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1079,
									"end": 1146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1079,
									"end": 1146,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1161,
									"end": 1195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1195,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1158,
									"end": 1220,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1223,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1259,
									"end": 1261,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1252,
									"end": 1274,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1320,
									"end": 1344,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1317,
									"end": 1354,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1367,
									"end": 1368,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1365,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1357,
									"end": 1369,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1445,
									"end": 1451,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1442,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1432,
									"end": 1438,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1428,
									"end": 1443,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1415,
									"end": 1426,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1380,
									"end": 1452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1477,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1828,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1863,
									"end": 1869,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1870,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1933,
									"end": 1936,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1926,
									"end": 1930,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1924,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1914,
									"end": 1931,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1879,
									"end": 1945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1696,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209248c967aa23b541110fe189462dd2ac54bf1fb1e345dd2b486ce43f1ac3f84c64736f6c634300081c0033",
									".code": [
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cf2262da98236b356394d5f9ab404713301ef86bc315c1dbbb9bd742b048a12f64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf2262da98236b356394d5f9ab404713301ef86bc315c1dbbb9bd742b048a12f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0x22 PUSH3 0xDA9823 PUSH12 0x356394D5F9AB404713301EF8 PUSH12 0xC315C1DBBB9BD742B048A12F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "496:5741:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf2262da98236b356394d5f9ab404713301ef86bc315c1dbbb9bd742b048a12f64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0x22 PUSH3 0xDA9823 PUSH12 0x356394D5F9AB404713301EF8 PUSH12 0xC315C1DBBB9BD742B048A12F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "496:5741:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf2262da98236b356394d5f9ab404713301ef86bc315c1dbbb9bd742b048a12f64736f6c634300081c0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220af246b6844cbb34b233886d33e5bb4ffd2161c673b163ff0c326ff4a77984c2864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af246b6844cbb34b233886d33e5bb4ffd2161c673b163ff0c326ff4a77984c2864736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0x24 PUSH12 0x6844CBB34B233886D33E5BB4 SELFDESTRUCT 0xD2 AND SHR PUSH8 0x3B163FF0C326FF4A PUSH24 0x984C2864736F6C634300081C003300000000000000000000 ",
							"sourceMap": "233:5815:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5815:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af246b6844cbb34b233886d33e5bb4ffd2161c673b163ff0c326ff4a77984c2864736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0x24 PUSH12 0x6844CBB34B233886D33E5BB4 SELFDESTRUCT 0xD2 AND SHR PUSH8 0x3B163FF0C326FF4A PUSH24 0x984C2864736F6C634300081C003300000000000000000000 ",
							"sourceMap": "233:5815:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af246b6844cbb34b233886d33e5bb4ffd2161c673b163ff0c326ff4a77984c2864736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207d7662c3c0b05e28278aa9ccc982620ce959475c082f355a16ec6d4c90b88e7764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d7662c3c0b05e28278aa9ccc982620ce959475c082f355a16ec6d4c90b88e7764736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x7662C3C0B05E28278AA9CCC982620CE959475C082F355A16EC6D4C90B88E PUSH24 0x64736F6C634300081C003300000000000000000000000000 ",
							"sourceMap": "411:484:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d7662c3c0b05e28278aa9ccc982620ce959475c082f355a16ec6d4c90b88e7764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x7662C3C0B05E28278AA9CCC982620CE959475C082F355A16EC6D4C90B88E PUSH24 0x64736F6C634300081C003300000000000000000000000000 ",
							"sourceMap": "411:484:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d7662c3c0b05e28278aa9ccc982620ce959475c082f355a16ec6d4c90b88e7764736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204b9023e5c61dd18ffeca3443eddada49929311d6fa378b1f9a86c214a4f6209864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b9023e5c61dd18ffeca3443eddada49929311d6fa378b1f9a86c214a4f6209864736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SWAP1 0x23 0xE5 0xC6 SAR 0xD1 DUP16 INVALID 0xCA CALLVALUE NUMBER 0xED 0xDA 0xDA BLOBHASH SWAP3 SWAP4 GT 0xD6 STATICCALL CALLDATACOPY DUP12 0x1F SWAP11 DUP7 0xC2 EQ LOG4 0xF6 KECCAK256 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1407:2774:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b9023e5c61dd18ffeca3443eddada49929311d6fa378b1f9a86c214a4f6209864736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SWAP1 0x23 0xE5 0xC6 SAR 0xD1 DUP16 INVALID 0xCA CALLVALUE NUMBER 0xED 0xDA 0xDA BLOBHASH SWAP3 SWAP4 GT 0xD6 STATICCALL CALLDATACOPY DUP12 0x1F SWAP11 DUP7 0xC2 EQ LOG4 0xF6 KECCAK256 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1407:2774:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b9023e5c61dd18ffeca3443eddada49929311d6fa378b1f9a86c214a4f6209864736f6c634300081c0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"proxy.sol": {
				"GenericProxyDeployer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxy",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ProxyDeployed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initData",
									"type": "bytes"
								}
							],
							"name": "deployProxy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "deployProxyWithoutInit",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Helper contract to deploy proxies for any contract with any initialization data",
						"kind": "dev",
						"methods": {
							"deployProxy(address,bytes)": {
								"details": "Deploy a proxy with custom initialization data",
								"params": {
									"implementation": "Address of the implementation contract",
									"initData": "Encoded initialization function call"
								}
							},
							"deployProxyWithoutInit(address)": {
								"details": "Deploy a proxy without initialization (for contracts with no initializer)",
								"params": {
									"implementation": "Address of the implementation contract"
								}
							}
						},
						"title": "GenericProxyDeployer",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"proxy.sol\":519:1766  contract GenericProxyDeployer {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"proxy.sol\":519:1766  contract GenericProxyDeployer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x08826ac1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9f5eed75\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"proxy.sol\":1392:1764  function deployProxyWithoutInit(... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":570:625   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":552:626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":540:542   */\n      0x20\n        /* \"#utility.yul\":525:543   */\n      add\n        /* \"proxy.sol\":1392:1764  function deployProxyWithoutInit(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"proxy.sol\":843:1212  function deployProxy(... */\n    tag_4:\n      tag_5\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n        /* \"proxy.sol\":1392:1764  function deployProxyWithoutInit(... */\n    tag_8:\n        /* \"proxy.sol\":1480:1487  address */\n      0x00\n        /* \"proxy.sol\":1558:1580  GenericUUPSProxy proxy */\n      dup1\n        /* \"proxy.sol\":1617:1631  implementation */\n      dup3\n        /* \"proxy.sol\":1583:1657  new GenericUUPSProxy(... */\n      mload(0x40)\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1531:1586   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1513:1587   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1623:1625   */\n      0x40\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1603:1621   */\n      dup3\n      add\n        /* \"#utility.yul\":1596:1626   */\n      dup2\n      swap1\n      mstore\n      0x00\n        /* \"#utility.yul\":1642:1660   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1635:1664   */\n      mstore\n        /* \"#utility.yul\":1696:1698   */\n      0x60\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"proxy.sol\":1583:1657  new GenericUUPSProxy(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n        /* \"proxy.sol\":1558:1657  GenericUUPSProxy proxy = new GenericUUPSProxy(... */\n      swap1\n      pop\n        /* \"proxy.sol\":1711:1725  implementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy.sol\":1681:1726  ProxyDeployed(address(proxy), implementation) */\n      and\n        /* \"proxy.sol\":1703:1708  proxy */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy.sol\":1681:1726  ProxyDeployed(address(proxy), implementation) */\n      and\n      0x3d2489efb661e8b1c3679865db649ca1de61d76a71184a1234de2e55786a6aad\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"proxy.sol\":1751:1756  proxy */\n      swap3\n        /* \"proxy.sol\":1392:1764  function deployProxyWithoutInit(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"proxy.sol\":843:1212  function deployProxy(... */\n    tag_14:\n        /* \"proxy.sol\":953:960  address */\n      0x00\n        /* \"proxy.sol\":1000:1022  GenericUUPSProxy proxy */\n      dup1\n        /* \"proxy.sol\":1059:1073  implementation */\n      dup5\n        /* \"proxy.sol\":1087:1095  initData */\n      dup5\n      dup5\n        /* \"proxy.sol\":1025:1105  new GenericUUPSProxy(... */\n      mload(0x40)\n      tag_23\n      swap1\n      tag_18\n      jump\t// in\n    tag_23:\n      tag_24\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n        /* \"proxy.sol\":1000:1105  GenericUUPSProxy proxy = new GenericUUPSProxy(... */\n      swap1\n      pop\n        /* \"proxy.sol\":1159:1173  implementation */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy.sol\":1129:1174  ProxyDeployed(address(proxy), implementation) */\n      and\n        /* \"proxy.sol\":1151:1156  proxy */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy.sol\":1129:1174  ProxyDeployed(address(proxy), implementation) */\n      and\n      0x3d2489efb661e8b1c3679865db649ca1de61d76a71184a1234de2e55786a6aad\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"proxy.sol\":1199:1204  proxy */\n      swap5\n        /* \"proxy.sol\":843:1212  function deployProxy(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_18:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_27:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_30:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_7:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_32:\n        /* \"#utility.yul\":366:395   */\n      tag_33\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_27\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":637:1297   */\n    tag_13:\n        /* \"#utility.yul\":716:722   */\n      0x00\n        /* \"#utility.yul\":724:730   */\n      dup1\n        /* \"#utility.yul\":732:738   */\n      0x00\n        /* \"#utility.yul\":785:787   */\n      0x40\n        /* \"#utility.yul\":773:782   */\n      dup5\n        /* \"#utility.yul\":764:771   */\n      dup7\n        /* \"#utility.yul\":760:783   */\n      sub\n        /* \"#utility.yul\":756:788   */\n      slt\n        /* \"#utility.yul\":753:805   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":801:802   */\n      0x00\n        /* \"#utility.yul\":798:799   */\n      dup1\n        /* \"#utility.yul\":791:803   */\n      revert\n        /* \"#utility.yul\":753:805   */\n    tag_36:\n        /* \"#utility.yul\":824:853   */\n      tag_37\n        /* \"#utility.yul\":843:852   */\n      dup5\n        /* \"#utility.yul\":824:853   */\n      tag_27\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":814:853   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:906   */\n      0x20\n        /* \"#utility.yul\":893:902   */\n      dup5\n        /* \"#utility.yul\":889:907   */\n      add\n        /* \"#utility.yul\":876:908   */\n      calldataload\n        /* \"#utility.yul\":931:949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":923:929   */\n      dup2\n        /* \"#utility.yul\":920:950   */\n      gt\n        /* \"#utility.yul\":917:967   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":963:964   */\n      0x00\n        /* \"#utility.yul\":960:961   */\n      dup1\n        /* \"#utility.yul\":953:965   */\n      revert\n        /* \"#utility.yul\":917:967   */\n    tag_38:\n        /* \"#utility.yul\":986:1008   */\n      dup5\n      add\n        /* \"#utility.yul\":1039:1043   */\n      0x1f\n        /* \"#utility.yul\":1031:1044   */\n      dup2\n      add\n        /* \"#utility.yul\":1027:1054   */\n      dup7\n      sgt\n        /* \"#utility.yul\":1017:1072   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":1068:1069   */\n      0x00\n        /* \"#utility.yul\":1065:1066   */\n      dup1\n        /* \"#utility.yul\":1058:1070   */\n      revert\n        /* \"#utility.yul\":1017:1072   */\n    tag_39:\n        /* \"#utility.yul\":1108:1110   */\n      dup1\n        /* \"#utility.yul\":1095:1111   */\n      calldataload\n        /* \"#utility.yul\":1134:1152   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1126:1132   */\n      dup2\n        /* \"#utility.yul\":1123:1153   */\n      gt\n        /* \"#utility.yul\":1120:1170   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1163:1164   */\n      dup1\n        /* \"#utility.yul\":1156:1168   */\n      revert\n        /* \"#utility.yul\":1120:1170   */\n    tag_40:\n        /* \"#utility.yul\":1211:1218   */\n      dup7\n        /* \"#utility.yul\":1206:1208   */\n      0x20\n        /* \"#utility.yul\":1197:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1195   */\n      dup5\n        /* \"#utility.yul\":1189:1204   */\n      add\n        /* \"#utility.yul\":1185:1209   */\n      add\n        /* \"#utility.yul\":1182:1219   */\n      gt\n        /* \"#utility.yul\":1179:1236   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":1232:1233   */\n      0x00\n        /* \"#utility.yul\":1229:1230   */\n      dup1\n        /* \"#utility.yul\":1222:1234   */\n      revert\n        /* \"#utility.yul\":1179:1236   */\n    tag_41:\n        /* \"#utility.yul\":637:1297   */\n      swap4\n      swap7\n        /* \"#utility.yul\":1263:1265   */\n      0x20\n        /* \"#utility.yul\":1255:1266   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n      pop\n        /* \"#utility.yul\":1285:1291   */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":637:1297   */\n      jump\t// out\n        /* \"#utility.yul\":1710:2218   */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1899:1905   */\n      dup5\n        /* \"#utility.yul\":1895:1950   */\n      and\n        /* \"#utility.yul\":1884:1893   */\n      dup2\n        /* \"#utility.yul\":1877:1951   */\n      mstore\n        /* \"#utility.yul\":1987:1989   */\n      0x40\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1971:1980   */\n      dup3\n        /* \"#utility.yul\":1967:1985   */\n      add\n        /* \"#utility.yul\":1960:1990   */\n      mstore\n        /* \"#utility.yul\":2026:2032   */\n      dup2\n        /* \"#utility.yul\":2021:2023   */\n      0x40\n        /* \"#utility.yul\":2010:2019   */\n      dup3\n        /* \"#utility.yul\":2006:2024   */\n      add\n        /* \"#utility.yul\":1999:2033   */\n      mstore\n        /* \"#utility.yul\":2083:2089   */\n      dup2\n        /* \"#utility.yul\":2075:2081   */\n      dup4\n        /* \"#utility.yul\":2070:2072   */\n      0x60\n        /* \"#utility.yul\":2059:2068   */\n      dup4\n        /* \"#utility.yul\":2055:2073   */\n      add\n        /* \"#utility.yul\":2042:2090   */\n      calldatacopy\n        /* \"#utility.yul\":2139:2140   */\n      0x00\n        /* \"#utility.yul\":2110:2132   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":2134:2136   */\n      0x60\n        /* \"#utility.yul\":2106:2137   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":2099:2141   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2202:2204   */\n      0x1f\n        /* \"#utility.yul\":2181:2196   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2177:2206   */\n      and\n        /* \"#utility.yul\":2162:2207   */\n      add\n        /* \"#utility.yul\":2158:2212   */\n      add\n      swap3\n        /* \"#utility.yul\":1710:2218   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n          mstore(0x40, 0x80)\n            /* \"proxy.sol\":272:388  constructor(... */\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          add\n          0x40\n          dup2\n          swap1\n          mstore\n          tag_2\n          swap2\n          tag_3\n          jump\t// in\n        tag_2:\n            /* \"proxy.sol\":363:377  implementation */\n          dup2\n            /* \"proxy.sol\":379:384  _data */\n          dup2\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n          tag_7\n            /* \"proxy.sol\":363:377  implementation */\n          dup3\n            /* \"proxy.sol\":379:384  _data */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n          tag_8\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n          jump\t// in\n        tag_7:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n          pop\n          pop\n            /* \"proxy.sol\":272:388  constructor(... */\n          pop\n          pop\n            /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n          jump(tag_50)\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n        tag_8:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n          tag_12\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n          tag_13\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n          jump\t// in\n        tag_12:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n          dup4\n          and\n          swap1\n          0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n          swap1\n          0x00\n          swap1\n          log2\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n          dup1\n          mload\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n          iszero\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n          tag_14\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n          tag_15\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n          dup3\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n          tag_16\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n          jump\t// in\n        tag_15:\n          pop\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n        tag_14:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n          tag_18\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n          tag_19\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n          jump\t// in\n        tag_18:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n        tag_13:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n          dup1\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n          and\n          extcodesize\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n          0x00\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n          sub\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n          tag_21\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n          mload(0x40)\n          shl(0xe0, 0x4c9c8ce3)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":1652:1684   */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":1634:1685   */\n          mstore\n            /* \"#utility.yul\":1607:1625   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n        tag_22:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n        tag_21:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n          0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          and\n          sub(shl(0xa0, 0x01), 0x01)\n          swap3\n          swap1\n          swap3\n          and\n          swap2\n          swap1\n          swap2\n          or\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n        tag_16:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n          0x60\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n          dup1\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n          dup5\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n          and\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n          dup5\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n          mload(0x40)\n          tag_27\n          swap2\n          swap1\n          tag_28\n          jump\t// in\n        tag_27:\n          0x00\n          mload(0x40)\n          dup1\n          dup4\n          sub\n          dup2\n          dup6\n          gas\n          delegatecall\n          swap2\n          pop\n          pop\n          returndatasize\n          dup1\n          0x00\n          dup2\n          eq\n          tag_31\n          jumpi\n          mload(0x40)\n          swap2\n          pop\n          and(add(returndatasize, 0x3f), not(0x1f))\n          dup3\n          add\n          0x40\n          mstore\n          returndatasize\n          dup3\n          mstore\n          returndatasize\n          0x00\n          0x20\n          dup5\n          add\n          returndatacopy\n          jump(tag_30)\n        tag_31:\n          0x60\n          swap2\n          pop\n        tag_30:\n          pop\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n          swap1\n          swap3\n          pop\n          swap1\n          pop\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n          tag_32\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n          dup6\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n          dup4\n          dup4\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n          tag_33\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n          jump\t// in\n        tag_32:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n          swap6\n            /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n          swap5\n          pop\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n        tag_19:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n          callvalue\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n          iszero\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n          tag_35\n          jumpi\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n          mload(0x40)\n          shl(0xe0, 0xb398979f)\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n        tag_35:\n            /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n        tag_33:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n          0x60\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n          dup3\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n          tag_38\n          jumpi\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n          tag_39\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n          dup3\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n          tag_40\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n          jump\t// in\n        tag_39:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n          jump(tag_41)\n        tag_38:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n          dup2\n          mload\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n          iszero\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n          dup1\n          iszero\n          tag_42\n          jumpi\n          pop\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n          dup5\n          and\n          extcodesize\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n          iszero\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n        tag_42:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n          iszero\n          tag_43\n          jumpi\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n          mload(0x40)\n          shl(0xe0, 0x9996b315)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":1652:1684   */\n          dup6\n          and\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":1634:1685   */\n          mstore\n            /* \"#utility.yul\":1607:1625   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n          tag_22\n            /* \"#utility.yul\":1488:1691   */\n          jump\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n        tag_43:\n          pop\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n          dup1\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n        tag_41:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n          swap4\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n        tag_40:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n          dup1\n          mload\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n          iszero\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n          tag_46\n          jumpi\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n          dup1\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n          mload\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n          dup1\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n          dup3\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n          0x20\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n          add\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n          revert\n            /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n        tag_46:\n            /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n          mload(0x40)\n          shl(0xe0, 0xd6bda275)\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"#utility.yul\":14:141   */\n        tag_48:\n            /* \"#utility.yul\":75:85   */\n          0x4e487b71\n            /* \"#utility.yul\":70:73   */\n          0xe0\n            /* \"#utility.yul\":66:86   */\n          shl\n            /* \"#utility.yul\":63:64   */\n          0x00\n            /* \"#utility.yul\":56:87   */\n          mstore\n            /* \"#utility.yul\":106:110   */\n          0x41\n            /* \"#utility.yul\":103:104   */\n          0x04\n            /* \"#utility.yul\":96:111   */\n          mstore\n            /* \"#utility.yul\":130:134   */\n          0x24\n            /* \"#utility.yul\":127:128   */\n          0x00\n            /* \"#utility.yul\":120:135   */\n          revert\n            /* \"#utility.yul\":146:396   */\n        tag_49:\n            /* \"#utility.yul\":231:232   */\n          0x00\n            /* \"#utility.yul\":241:354   */\n        tag_53:\n            /* \"#utility.yul\":255:261   */\n          dup4\n            /* \"#utility.yul\":252:253   */\n          dup2\n            /* \"#utility.yul\":249:262   */\n          lt\n            /* \"#utility.yul\":241:354   */\n          iszero\n          tag_55\n          jumpi\n            /* \"#utility.yul\":331:342   */\n          dup2\n          dup2\n          add\n            /* \"#utility.yul\":325:343   */\n          mload\n            /* \"#utility.yul\":312:323   */\n          dup4\n          dup3\n          add\n            /* \"#utility.yul\":305:344   */\n          mstore\n            /* \"#utility.yul\":277:279   */\n          0x20\n            /* \"#utility.yul\":270:280   */\n          add\n            /* \"#utility.yul\":241:354   */\n          jump(tag_53)\n        tag_55:\n          pop\n          pop\n            /* \"#utility.yul\":388:389   */\n          0x00\n            /* \"#utility.yul\":370:386   */\n          swap2\n          add\n            /* \"#utility.yul\":363:390   */\n          mstore\n            /* \"#utility.yul\":146:396   */\n          jump\t// out\n            /* \"#utility.yul\":401:1483   */\n        tag_3:\n            /* \"#utility.yul\":489:495   */\n          0x00\n            /* \"#utility.yul\":497:503   */\n          dup1\n            /* \"#utility.yul\":550:552   */\n          0x40\n            /* \"#utility.yul\":538:547   */\n          dup4\n            /* \"#utility.yul\":529:536   */\n          dup6\n            /* \"#utility.yul\":525:548   */\n          sub\n            /* \"#utility.yul\":521:553   */\n          slt\n            /* \"#utility.yul\":518:570   */\n          iszero\n          tag_57\n          jumpi\n            /* \"#utility.yul\":566:567   */\n          0x00\n            /* \"#utility.yul\":563:564   */\n          dup1\n            /* \"#utility.yul\":556:568   */\n          revert\n            /* \"#utility.yul\":518:570   */\n        tag_57:\n            /* \"#utility.yul\":592:608   */\n          dup3\n          mload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":637:668   */\n          dup2\n          and\n            /* \"#utility.yul\":627:669   */\n          dup2\n          eq\n            /* \"#utility.yul\":617:687   */\n          tag_58\n          jumpi\n            /* \"#utility.yul\":683:684   */\n          0x00\n            /* \"#utility.yul\":680:681   */\n          dup1\n            /* \"#utility.yul\":673:685   */\n          revert\n            /* \"#utility.yul\":617:687   */\n        tag_58:\n            /* \"#utility.yul\":755:757   */\n          0x20\n            /* \"#utility.yul\":740:758   */\n          dup5\n          add\n            /* \"#utility.yul\":734:759   */\n          mload\n            /* \"#utility.yul\":706:711   */\n          swap1\n          swap3\n          pop\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":771:801   */\n          dup2\n          gt\n            /* \"#utility.yul\":768:818   */\n          iszero\n          tag_59\n          jumpi\n            /* \"#utility.yul\":814:815   */\n          0x00\n            /* \"#utility.yul\":811:812   */\n          dup1\n            /* \"#utility.yul\":804:816   */\n          revert\n            /* \"#utility.yul\":768:818   */\n        tag_59:\n            /* \"#utility.yul\":837:859   */\n          dup4\n          add\n            /* \"#utility.yul\":890:894   */\n          0x1f\n            /* \"#utility.yul\":882:895   */\n          dup2\n          add\n            /* \"#utility.yul\":878:905   */\n          dup6\n          sgt\n            /* \"#utility.yul\":868:923   */\n          tag_60\n          jumpi\n            /* \"#utility.yul\":919:920   */\n          0x00\n            /* \"#utility.yul\":916:917   */\n          dup1\n            /* \"#utility.yul\":909:921   */\n          revert\n            /* \"#utility.yul\":868:923   */\n        tag_60:\n            /* \"#utility.yul\":946:955   */\n          dup1\n          mload\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":967:997   */\n          dup2\n          gt\n            /* \"#utility.yul\":964:1020   */\n          iszero\n          tag_62\n          jumpi\n            /* \"#utility.yul\":1000:1018   */\n          tag_62\n          tag_48\n          jump\t// in\n        tag_62:\n            /* \"#utility.yul\":1049:1051   */\n          0x40\n            /* \"#utility.yul\":1043:1052   */\n          mload\n            /* \"#utility.yul\":1141:1143   */\n          0x1f\n            /* \"#utility.yul\":1103:1120   */\n          dup3\n          add\n          not(0x1f)\n            /* \"#utility.yul\":1099:1130   */\n          swap1\n          dup2\n          and\n            /* \"#utility.yul\":1132:1134   */\n          0x3f\n            /* \"#utility.yul\":1095:1135   */\n          add\n            /* \"#utility.yul\":1091:1145   */\n          and\n            /* \"#utility.yul\":1079:1146   */\n          dup2\n          add\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":1161:1195   */\n          dup2\n          gt\n            /* \"#utility.yul\":1197:1219   */\n          dup3\n          dup3\n          lt\n            /* \"#utility.yul\":1158:1220   */\n          or\n            /* \"#utility.yul\":1155:1243   */\n          iszero\n          tag_64\n          jumpi\n            /* \"#utility.yul\":1223:1241   */\n          tag_64\n          tag_48\n          jump\t// in\n        tag_64:\n            /* \"#utility.yul\":1259:1261   */\n          0x40\n            /* \"#utility.yul\":1252:1274   */\n          mstore\n            /* \"#utility.yul\":1283:1305   */\n          dup2\n          dup2\n          mstore\n            /* \"#utility.yul\":1324:1339   */\n          dup3\n          dup3\n          add\n            /* \"#utility.yul\":1341:1343   */\n          0x20\n            /* \"#utility.yul\":1320:1344   */\n          add\n            /* \"#utility.yul\":1317:1354   */\n          dup8\n          lt\n            /* \"#utility.yul\":1314:1371   */\n          iszero\n          tag_65\n          jumpi\n            /* \"#utility.yul\":1367:1368   */\n          0x00\n            /* \"#utility.yul\":1364:1365   */\n          dup1\n            /* \"#utility.yul\":1357:1369   */\n          revert\n            /* \"#utility.yul\":1314:1371   */\n        tag_65:\n            /* \"#utility.yul\":1380:1452   */\n          tag_66\n            /* \"#utility.yul\":1445:1451   */\n          dup3\n            /* \"#utility.yul\":1440:1442   */\n          0x20\n            /* \"#utility.yul\":1432:1438   */\n          dup4\n            /* \"#utility.yul\":1428:1443   */\n          add\n            /* \"#utility.yul\":1423:1425   */\n          0x20\n            /* \"#utility.yul\":1419:1421   */\n          dup7\n            /* \"#utility.yul\":1415:1426   */\n          add\n            /* \"#utility.yul\":1380:1452   */\n          tag_49\n          jump\t// in\n        tag_66:\n            /* \"#utility.yul\":1471:1477   */\n          dup1\n            /* \"#utility.yul\":1461:1477   */\n          swap4\n          pop\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":401:1483   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1696:1983   */\n        tag_28:\n            /* \"#utility.yul\":1825:1828   */\n          0x00\n            /* \"#utility.yul\":1863:1869   */\n          dup3\n            /* \"#utility.yul\":1857:1870   */\n          mload\n            /* \"#utility.yul\":1879:1945   */\n          tag_69\n            /* \"#utility.yul\":1938:1944   */\n          dup2\n            /* \"#utility.yul\":1933:1936   */\n          dup5\n            /* \"#utility.yul\":1926:1930   */\n          0x20\n            /* \"#utility.yul\":1918:1924   */\n          dup8\n            /* \"#utility.yul\":1914:1931   */\n          add\n            /* \"#utility.yul\":1879:1945   */\n          tag_49\n          jump\t// in\n        tag_69:\n            /* \"#utility.yul\":1961:1977   */\n          swap2\n          swap1\n          swap2\n          add\n          swap3\n            /* \"#utility.yul\":1696:1983   */\n          swap2\n          pop\n          pop\n          jump\t// out\n        tag_50:\n            /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n              mstore(0x40, 0x80)\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n              tag_5\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n              tag_6\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n              jump\t// in\n            tag_5:\n                /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n              stop\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n            tag_6:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n              tag_8\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n              tag_9\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n              tag_10\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n              jump\t// in\n            tag_9:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n              tag_11\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n              jump\t// in\n            tag_8:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n            tag_10:\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n              tag_13\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n              0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n              sload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n              jump\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n            tag_13:\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n              swap1\n              pop\n                /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n              swap1\n              jump\t// out\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n            tag_11:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n              calldatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n              dup1\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n              calldatacopy\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n              dup1\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n              calldatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n              dup5\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n              gas\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n              delegatecall\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n              dup1\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n              returndatacopy\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n              dup1\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n              dup1\n              iszero\n              tag_17\n              jumpi\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n              return\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n            tag_17:\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n              0x00\n                /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n              revert\n\n            auxdata: 0xa264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033\n        }\n    }\n\n    auxdata: 0xa2646970667358221220591506efb01e9c4fbc98b6cc0edcdbc8daad0c7df3a1becd463eef01fb13302364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506107098061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806308826ac11461003b5780639f5eed751461006a575b600080fd5b61004e6100493660046101bf565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100783660046101e1565b610111565b6000808260405161008d90610196565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f0801580156100c8573d6000803e3d6000fd5b509050826001600160a01b0316816001600160a01b03167f3d2489efb661e8b1c3679865db649ca1de61d76a71184a1234de2e55786a6aad60405160405180910390a392915050565b60008084848460405161012390610196565b61012f93929190610266565b604051809103906000f08015801561014b573d6000803e3d6000fd5b509050846001600160a01b0316816001600160a01b03167f3d2489efb661e8b1c3679865db649ca1de61d76a71184a1234de2e55786a6aad60405160405180910390a3949350505050565b61042e806102a683390190565b80356001600160a01b03811681146101ba57600080fd5b919050565b6000602082840312156101d157600080fd5b6101da826101a3565b9392505050565b6000806000604084860312156101f657600080fd5b6101ff846101a3565b9250602084013567ffffffffffffffff81111561021b57600080fd5b8401601f8101861361022c57600080fd5b803567ffffffffffffffff81111561024357600080fd5b86602082840101111561025557600080fd5b939660209190910195509293505050565b6001600160a01b038416815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fe608060405234801561001057600080fd5b5060405161042e38038061042e83398101604081905261002f91610279565b818161003b8282610044565b50505050610369565b61004d826100a3565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561009757610092828261011f565b505050565b61009f610196565b5050565b806001600160a01b03163b6000036100de57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161013c919061034d565b600060405180830381855af49150503d8060008114610177576040519150601f19603f3d011682016040523d82523d6000602084013e61017c565b606091505b50909250905061018d8583836101b7565b95945050505050565b34156101b55760405163b398979f60e01b815260040160405180910390fd5b565b6060826101cc576101c782610216565b61020f565b81511580156101e357506001600160a01b0384163b155b1561020c57604051639996b31560e01b81526001600160a01b03851660048201526024016100d5565b50805b9392505050565b8051156102265780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015610270578181015183820152602001610258565b50506000910152565b6000806040838503121561028c57600080fd5b82516001600160a01b03811681146102a357600080fd5b60208401519092506001600160401b038111156102bf57600080fd5b8301601f810185136102d057600080fd5b80516001600160401b038111156102e9576102e961023f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156103175761031761023f565b60405281815282820160200187101561032f57600080fd5b610340826020830160208601610255565b8093505050509250929050565b6000825161035f818460208701610255565b9190910192915050565b60b7806103776000396000f3fe6080604052600a600c565b005b60186014601a565b605e565b565b600060597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e808015607c573d6000f35b3d6000fdfea264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033a2646970667358221220591506efb01e9c4fbc98b6cc0edcdbc8daad0c7df3a1becd463eef01fb13302364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x709 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8826AC1 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9F5EED75 EQ PUSH2 0x6A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x78 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8D SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D2489EFB661E8B1C3679865DB649CA1DE61D76A71184A1234DE2E55786A6AAD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x123 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH2 0x12F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x14B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D2489EFB661E8B1C3679865DB649CA1DE61D76A71184A1234DE2E55786A6AAD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x42E DUP1 PUSH2 0x2A6 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FF DUP5 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 POP SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x42E CODESIZE SUB DUP1 PUSH2 0x42E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x279 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x3B DUP3 DUP3 PUSH2 0x44 JUMP JUMPDEST POP POP POP POP PUSH2 0x369 JUMP JUMPDEST PUSH2 0x4D DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x97 JUMPI PUSH2 0x92 DUP3 DUP3 PUSH2 0x11F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9F PUSH2 0x196 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x177 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x18D DUP6 DUP4 DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1CC JUMPI PUSH2 0x1C7 DUP3 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD5 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x226 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x270 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x258 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH2 0x2E9 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x317 JUMPI PUSH2 0x317 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x340 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x255 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x35F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB7 DUP1 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x59 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xF8 0xD7 INVALID PUSH10 0x4F24F77D0CFB71D513B7 0xEB 0xA5 SHL DUP9 0xE6 SWAP9 PUSH0 PC 0xBD SWAP11 0xBB SSTORE PUSH20 0x1B68881F64736F6C634300081C0033A264697066 PUSH20 0x58221220591506EFB01E9C4FBC98B6CC0EDCDBC8 0xDA 0xAD 0xC PUSH30 0xF3A1BECD463EEF01FB13302364736F6C634300081C003300000000000000 ",
							"sourceMap": "519:1247:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deployProxyWithoutInit_896": {
									"entryPoint": 125,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deployProxy_864": {
									"entryPoint": 273,
									"id": 864,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2220:9",
										"nodeType": "YulBlock",
										"src": "0:2220:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:147:9",
													"nodeType": "YulBlock",
													"src": "63:147:9",
													"statements": [
														{
															"nativeSrc": "73:29:9",
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nativeSrc": "82:20:9",
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "188:16:9",
																"nodeType": "YulBlock",
																"src": "188:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "197:1:9",
																					"nodeType": "YulLiteral",
																					"src": "197:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "200:1:9",
																					"nodeType": "YulLiteral",
																					"src": "200:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "190:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:9"
																			},
																			"nativeSrc": "190:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:9"
																		},
																		"nativeSrc": "190:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "142:42:9",
																						"nodeType": "YulLiteral",
																						"src": "142:42:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nativeSrc": "131:54:9",
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nativeSrc": "121:65:9",
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nativeSrc": "114:73:9",
																"nodeType": "YulFunctionCall",
																"src": "114:73:9"
															},
															"nativeSrc": "111:93:9",
															"nodeType": "YulIf",
															"src": "111:93:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:196:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:9",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:9",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:196:9"
											},
											{
												"body": {
													"nativeSrc": "285:116:9",
													"nodeType": "YulBlock",
													"src": "285:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "331:16:9",
																"nodeType": "YulBlock",
																"src": "331:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "340:1:9",
																					"nodeType": "YulLiteral",
																					"src": "340:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:1:9",
																					"nodeType": "YulLiteral",
																					"src": "343:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "333:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:9"
																			},
																			"nativeSrc": "333:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:9"
																		},
																		"nativeSrc": "333:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "306:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "315:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:9"
																		},
																		"nativeSrc": "302:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "327:2:9",
																		"nodeType": "YulLiteral",
																		"src": "327:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "298:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:9"
																},
																"nativeSrc": "298:32:9",
																"nodeType": "YulFunctionCall",
																"src": "298:32:9"
															},
															"nativeSrc": "295:52:9",
															"nodeType": "YulIf",
															"src": "295:52:9"
														},
														{
															"nativeSrc": "356:39:9",
															"nodeType": "YulAssignment",
															"src": "356:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "385:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "366:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:9"
																},
																"nativeSrc": "366:29:9",
																"nodeType": "YulFunctionCall",
																"src": "366:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "356:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "215:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "251:9:9",
														"nodeType": "YulTypedName",
														"src": "251:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "262:7:9",
														"nodeType": "YulTypedName",
														"src": "262:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "274:6:9",
														"nodeType": "YulTypedName",
														"src": "274:6:9",
														"type": ""
													}
												],
												"src": "215:186:9"
											},
											{
												"body": {
													"nativeSrc": "507:125:9",
													"nodeType": "YulBlock",
													"src": "507:125:9",
													"statements": [
														{
															"nativeSrc": "517:26:9",
															"nodeType": "YulAssignment",
															"src": "517:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "529:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "529:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "540:2:9",
																		"nodeType": "YulLiteral",
																		"src": "540:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "525:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:9"
																},
																"nativeSrc": "525:18:9",
																"nodeType": "YulFunctionCall",
																"src": "525:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "517:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "517:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "559:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "574:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "574:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "582:42:9",
																				"nodeType": "YulLiteral",
																				"src": "582:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "570:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "570:3:9"
																		},
																		"nativeSrc": "570:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "570:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "552:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:9"
																},
																"nativeSrc": "552:74:9",
																"nodeType": "YulFunctionCall",
																"src": "552:74:9"
															},
															"nativeSrc": "552:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "552:74:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "406:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "476:9:9",
														"nodeType": "YulTypedName",
														"src": "476:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "487:6:9",
														"nodeType": "YulTypedName",
														"src": "487:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "498:4:9",
														"nodeType": "YulTypedName",
														"src": "498:4:9",
														"type": ""
													}
												],
												"src": "406:226:9"
											},
											{
												"body": {
													"nativeSrc": "743:554:9",
													"nodeType": "YulBlock",
													"src": "743:554:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "789:16:9",
																"nodeType": "YulBlock",
																"src": "789:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "798:1:9",
																					"nodeType": "YulLiteral",
																					"src": "798:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "801:1:9",
																					"nodeType": "YulLiteral",
																					"src": "801:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "791:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "791:6:9"
																			},
																			"nativeSrc": "791:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "791:12:9"
																		},
																		"nativeSrc": "791:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "791:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "764:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "764:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "773:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "773:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "760:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "760:3:9"
																		},
																		"nativeSrc": "760:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "760:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "785:2:9",
																		"nodeType": "YulLiteral",
																		"src": "785:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "756:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:9"
																},
																"nativeSrc": "756:32:9",
																"nodeType": "YulFunctionCall",
																"src": "756:32:9"
															},
															"nativeSrc": "753:52:9",
															"nodeType": "YulIf",
															"src": "753:52:9"
														},
														{
															"nativeSrc": "814:39:9",
															"nodeType": "YulAssignment",
															"src": "814:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "843:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "824:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "824:18:9"
																},
																"nativeSrc": "824:29:9",
																"nodeType": "YulFunctionCall",
																"src": "824:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "814:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "814:6:9"
																}
															]
														},
														{
															"nativeSrc": "862:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "862:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "893:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "893:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "904:2:9",
																				"nodeType": "YulLiteral",
																				"src": "904:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "889:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "889:3:9"
																		},
																		"nativeSrc": "889:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "889:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "876:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "876:12:9"
																},
																"nativeSrc": "876:32:9",
																"nodeType": "YulFunctionCall",
																"src": "876:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "866:6:9",
																	"nodeType": "YulTypedName",
																	"src": "866:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "951:16:9",
																"nodeType": "YulBlock",
																"src": "951:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "960:1:9",
																					"nodeType": "YulLiteral",
																					"src": "960:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "963:1:9",
																					"nodeType": "YulLiteral",
																					"src": "963:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "953:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "953:6:9"
																			},
																			"nativeSrc": "953:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "953:12:9"
																		},
																		"nativeSrc": "953:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "953:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "923:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "923:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:18:9",
																		"nodeType": "YulLiteral",
																		"src": "931:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "920:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "920:2:9"
																},
																"nativeSrc": "920:30:9",
																"nodeType": "YulFunctionCall",
																"src": "920:30:9"
															},
															"nativeSrc": "917:50:9",
															"nodeType": "YulIf",
															"src": "917:50:9"
														},
														{
															"nativeSrc": "976:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "976:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "990:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "990:9:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1001:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1001:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "986:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:9"
																},
																"nativeSrc": "986:22:9",
																"nodeType": "YulFunctionCall",
																"src": "986:22:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "980:2:9",
																	"nodeType": "YulTypedName",
																	"src": "980:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1056:16:9",
																"nodeType": "YulBlock",
																"src": "1056:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1065:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1065:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1068:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1068:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1058:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:9"
																			},
																			"nativeSrc": "1058:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1058:12:9"
																		},
																		"nativeSrc": "1058:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1058:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1035:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1035:2:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1039:4:9",
																						"nodeType": "YulLiteral",
																						"src": "1039:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1031:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:9"
																				},
																				"nativeSrc": "1031:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1031:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1046:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1046:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1027:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1027:3:9"
																		},
																		"nativeSrc": "1027:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1027:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1020:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:9"
																},
																"nativeSrc": "1020:35:9",
																"nodeType": "YulFunctionCall",
																"src": "1020:35:9"
															},
															"nativeSrc": "1017:55:9",
															"nodeType": "YulIf",
															"src": "1017:55:9"
														},
														{
															"nativeSrc": "1081:30:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1081:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1108:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "1108:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1095:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1095:12:9"
																},
																"nativeSrc": "1095:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1095:16:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1085:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1085:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1154:16:9",
																"nodeType": "YulBlock",
																"src": "1154:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1163:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1163:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1166:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1166:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1156:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1156:6:9"
																			},
																			"nativeSrc": "1156:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:12:9"
																		},
																		"nativeSrc": "1156:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1126:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1126:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1134:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1123:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1123:2:9"
																},
																"nativeSrc": "1123:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1123:30:9"
															},
															"nativeSrc": "1120:50:9",
															"nodeType": "YulIf",
															"src": "1120:50:9"
														},
														{
															"body": {
																"nativeSrc": "1220:16:9",
																"nodeType": "YulBlock",
																"src": "1220:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1229:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1229:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1232:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1232:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1222:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1222:6:9"
																			},
																			"nativeSrc": "1222:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1222:12:9"
																		},
																		"nativeSrc": "1222:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1222:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1193:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1193:2:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1197:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1197:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1189:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1189:3:9"
																				},
																				"nativeSrc": "1189:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1189:15:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1206:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1206:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1185:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1185:3:9"
																		},
																		"nativeSrc": "1185:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1185:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1211:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1211:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1182:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1182:2:9"
																},
																"nativeSrc": "1182:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1182:37:9"
															},
															"nativeSrc": "1179:57:9",
															"nodeType": "YulIf",
															"src": "1179:57:9"
														},
														{
															"nativeSrc": "1245:21:9",
															"nodeType": "YulAssignment",
															"src": "1245:21:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1259:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "1259:2:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1263:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1263:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1255:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:9"
																},
																"nativeSrc": "1255:11:9",
																"nodeType": "YulFunctionCall",
																"src": "1255:11:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1245:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:9"
																}
															]
														},
														{
															"nativeSrc": "1275:16:9",
															"nodeType": "YulAssignment",
															"src": "1275:16:9",
															"value": {
																"name": "length",
																"nativeSrc": "1285:6:9",
																"nodeType": "YulIdentifier",
																"src": "1285:6:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1275:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nativeSrc": "637:660:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "693:9:9",
														"nodeType": "YulTypedName",
														"src": "693:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "704:7:9",
														"nodeType": "YulTypedName",
														"src": "704:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "716:6:9",
														"nodeType": "YulTypedName",
														"src": "716:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "724:6:9",
														"nodeType": "YulTypedName",
														"src": "724:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "732:6:9",
														"nodeType": "YulTypedName",
														"src": "732:6:9",
														"type": ""
													}
												],
												"src": "637:660:9"
											},
											{
												"body": {
													"nativeSrc": "1503:202:9",
													"nodeType": "YulBlock",
													"src": "1503:202:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1520:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1520:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1535:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1535:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1543:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1543:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1531:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:9"
																		},
																		"nativeSrc": "1531:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1513:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1513:6:9"
																},
																"nativeSrc": "1513:74:9",
																"nodeType": "YulFunctionCall",
																"src": "1513:74:9"
															},
															"nativeSrc": "1513:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "1513:74:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1607:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1607:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1618:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1618:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1603:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1603:3:9"
																		},
																		"nativeSrc": "1603:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1603:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1623:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1596:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:9"
																},
																"nativeSrc": "1596:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1596:30:9"
															},
															"nativeSrc": "1596:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1596:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1646:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1657:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1657:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:9"
																		},
																		"nativeSrc": "1642:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1642:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1635:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:9"
																},
																"nativeSrc": "1635:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:29:9"
															},
															"nativeSrc": "1635:29:9",
															"nodeType": "YulExpressionStatement",
															"src": "1635:29:9"
														},
														{
															"nativeSrc": "1673:26:9",
															"nodeType": "YulAssignment",
															"src": "1673:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1685:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1685:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1696:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1696:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:9"
																},
																"nativeSrc": "1681:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1681:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1673:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1673:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "1302:403:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1472:9:9",
														"nodeType": "YulTypedName",
														"src": "1472:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1483:6:9",
														"nodeType": "YulTypedName",
														"src": "1483:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1494:4:9",
														"nodeType": "YulTypedName",
														"src": "1494:4:9",
														"type": ""
													}
												],
												"src": "1302:403:9"
											},
											{
												"body": {
													"nativeSrc": "1867:351:9",
													"nodeType": "YulBlock",
													"src": "1867:351:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1884:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1884:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1907:42:9",
																				"nodeType": "YulLiteral",
																				"src": "1907:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1895:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:9"
																		},
																		"nativeSrc": "1895:55:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1895:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1877:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:9"
																},
																"nativeSrc": "1877:74:9",
																"nodeType": "YulFunctionCall",
																"src": "1877:74:9"
															},
															"nativeSrc": "1877:74:9",
															"nodeType": "YulExpressionStatement",
															"src": "1877:74:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1971:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1971:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1982:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1982:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1967:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:9"
																		},
																		"nativeSrc": "1967:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1987:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1987:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1960:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:9"
																},
																"nativeSrc": "1960:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1960:30:9"
															},
															"nativeSrc": "1960:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1960:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2010:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2010:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2021:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2021:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2006:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2006:3:9"
																		},
																		"nativeSrc": "2006:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2006:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2026:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2026:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1999:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:9"
																},
																"nativeSrc": "1999:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1999:34:9"
															},
															"nativeSrc": "1999:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1999:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2059:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2059:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2070:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2070:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2055:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2055:3:9"
																		},
																		"nativeSrc": "2055:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2055:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2075:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2075:6:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2083:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2083:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2042:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2042:12:9"
																},
																"nativeSrc": "2042:48:9",
																"nodeType": "YulFunctionCall",
																"src": "2042:48:9"
															},
															"nativeSrc": "2042:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "2042:48:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2114:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2114:9:9"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "2125:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2125:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2110:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2110:3:9"
																				},
																				"nativeSrc": "2110:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2110:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2134:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2134:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2106:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:9"
																		},
																		"nativeSrc": "2106:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2106:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2139:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2139:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2099:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:9"
																},
																"nativeSrc": "2099:42:9",
																"nodeType": "YulFunctionCall",
																"src": "2099:42:9"
															},
															"nativeSrc": "2099:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "2099:42:9"
														},
														{
															"nativeSrc": "2150:62:9",
															"nodeType": "YulAssignment",
															"src": "2150:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2166:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2166:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value2",
																								"nativeSrc": "2185:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "2185:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2193:2:9",
																								"nodeType": "YulLiteral",
																								"src": "2193:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2181:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2181:3:9"
																						},
																						"nativeSrc": "2181:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2181:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2202:2:9",
																								"nodeType": "YulLiteral",
																								"src": "2202:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2198:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2198:3:9"
																						},
																						"nativeSrc": "2198:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2198:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2177:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2177:3:9"
																				},
																				"nativeSrc": "2177:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2177:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2162:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:9"
																		},
																		"nativeSrc": "2162:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2162:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2209:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2209:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2158:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:9"
																},
																"nativeSrc": "2158:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2158:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2150:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2150:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "1710:508:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1820:9:9",
														"nodeType": "YulTypedName",
														"src": "1820:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1831:6:9",
														"nodeType": "YulTypedName",
														"src": "1831:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1839:6:9",
														"nodeType": "YulTypedName",
														"src": "1839:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1847:6:9",
														"nodeType": "YulTypedName",
														"src": "1847:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1858:4:9",
														"nodeType": "YulTypedName",
														"src": "1858:4:9",
														"type": ""
													}
												],
												"src": "1710:508:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_1, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 0)\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        calldatacopy(add(headStart, 96), value1, value2)\n        mstore(add(add(headStart, value2), 96), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806308826ac11461003b5780639f5eed751461006a575b600080fd5b61004e6100493660046101bf565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100783660046101e1565b610111565b6000808260405161008d90610196565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f0801580156100c8573d6000803e3d6000fd5b509050826001600160a01b0316816001600160a01b03167f3d2489efb661e8b1c3679865db649ca1de61d76a71184a1234de2e55786a6aad60405160405180910390a392915050565b60008084848460405161012390610196565b61012f93929190610266565b604051809103906000f08015801561014b573d6000803e3d6000fd5b509050846001600160a01b0316816001600160a01b03167f3d2489efb661e8b1c3679865db649ca1de61d76a71184a1234de2e55786a6aad60405160405180910390a3949350505050565b61042e806102a683390190565b80356001600160a01b03811681146101ba57600080fd5b919050565b6000602082840312156101d157600080fd5b6101da826101a3565b9392505050565b6000806000604084860312156101f657600080fd5b6101ff846101a3565b9250602084013567ffffffffffffffff81111561021b57600080fd5b8401601f8101861361022c57600080fd5b803567ffffffffffffffff81111561024357600080fd5b86602082840101111561025557600080fd5b939660209190910195509293505050565b6001600160a01b038416815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fe608060405234801561001057600080fd5b5060405161042e38038061042e83398101604081905261002f91610279565b818161003b8282610044565b50505050610369565b61004d826100a3565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561009757610092828261011f565b505050565b61009f610196565b5050565b806001600160a01b03163b6000036100de57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161013c919061034d565b600060405180830381855af49150503d8060008114610177576040519150601f19603f3d011682016040523d82523d6000602084013e61017c565b606091505b50909250905061018d8583836101b7565b95945050505050565b34156101b55760405163b398979f60e01b815260040160405180910390fd5b565b6060826101cc576101c782610216565b61020f565b81511580156101e357506001600160a01b0384163b155b1561020c57604051639996b31560e01b81526001600160a01b03851660048201526024016100d5565b50805b9392505050565b8051156102265780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015610270578181015183820152602001610258565b50506000910152565b6000806040838503121561028c57600080fd5b82516001600160a01b03811681146102a357600080fd5b60208401519092506001600160401b038111156102bf57600080fd5b8301601f810185136102d057600080fd5b80516001600160401b038111156102e9576102e961023f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156103175761031761023f565b60405281815282820160200187101561032f57600080fd5b610340826020830160208601610255565b8093505050509250929050565b6000825161035f818460208701610255565b9190910192915050565b60b7806103776000396000f3fe6080604052600a600c565b005b60186014601a565b605e565b565b600060597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e808015607c573d6000f35b3d6000fdfea264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033a2646970667358221220591506efb01e9c4fbc98b6cc0edcdbc8daad0c7df3a1becd463eef01fb13302364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8826AC1 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9F5EED75 EQ PUSH2 0x6A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x78 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8D SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D2489EFB661E8B1C3679865DB649CA1DE61D76A71184A1234DE2E55786A6AAD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x123 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH2 0x12F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x14B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D2489EFB661E8B1C3679865DB649CA1DE61D76A71184A1234DE2E55786A6AAD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x42E DUP1 PUSH2 0x2A6 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FF DUP5 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 POP SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x42E CODESIZE SUB DUP1 PUSH2 0x42E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x279 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x3B DUP3 DUP3 PUSH2 0x44 JUMP JUMPDEST POP POP POP POP PUSH2 0x369 JUMP JUMPDEST PUSH2 0x4D DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x97 JUMPI PUSH2 0x92 DUP3 DUP3 PUSH2 0x11F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9F PUSH2 0x196 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x177 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x18D DUP6 DUP4 DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1CC JUMPI PUSH2 0x1C7 DUP3 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD5 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x226 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x270 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x258 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH2 0x2E9 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x317 JUMPI PUSH2 0x317 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x340 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x255 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x35F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB7 DUP1 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x59 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xF8 0xD7 INVALID PUSH10 0x4F24F77D0CFB71D513B7 0xEB 0xA5 SHL DUP9 0xE6 SWAP9 PUSH0 PC 0xBD SWAP11 0xBB SSTORE PUSH20 0x1B68881F64736F6C634300081C0033A264697066 PUSH20 0x58221220591506EFB01E9C4FBC98B6CC0EDCDBC8 0xDA 0xAD 0xC PUSH30 0xF3A1BECD463EEF01FB13302364736F6C634300081C003300000000000000 ",
							"sourceMap": "519:1247:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:372;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;570:55:9;;;552:74;;540:2;525:18;1392:372:8;;;;;;;843:369;;;;;;:::i;:::-;;:::i;1392:372::-;1480:7;1558:22;1617:14;1583:74;;;;;:::i;:::-;-1:-1:-1;;;;;1531:55:9;;;1513:74;;1623:2;1618;1603:18;;1596:30;;;-1:-1:-1;1642:18:9;;;1635:29;1696:2;1681:18;1583:74:8;;;;;;;;;;;;;;;;;;;;;;;1558:99;;1711:14;-1:-1:-1;;;;;1681:45:8;1703:5;-1:-1:-1;;;;;1681:45:8;;;;;;;;;;;1751:5;1392:372;-1:-1:-1;;1392:372:8:o;843:369::-;953:7;1000:22;1059:14;1087:8;;1025:80;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1000:105;;1159:14;-1:-1:-1;;;;;1129:45:8;1151:5;-1:-1:-1;;;;;1129:45:8;;;;;;;;;;;1199:5;843:369;-1:-1:-1;;;;843:369:8:o;-1:-1:-1:-;;;;;;;;:::o;14:196:9:-;82:20;;-1:-1:-1;;;;;131:54:9;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:9:o;637:660::-;716:6;724;732;785:2;773:9;764:7;760:23;756:32;753:52;;;801:1;798;791:12;753:52;824:29;843:9;824:29;:::i;:::-;814:39;;904:2;893:9;889:18;876:32;931:18;923:6;920:30;917:50;;;963:1;960;953:12;917:50;986:22;;1039:4;1031:13;;1027:27;-1:-1:-1;1017:55:9;;1068:1;1065;1058:12;1017:55;1108:2;1095:16;1134:18;1126:6;1123:30;1120:50;;;1166:1;1163;1156:12;1120:50;1211:7;1206:2;1197:6;1193:2;1189:15;1185:24;1182:37;1179:57;;;1232:1;1229;1222:12;1179:57;637:660;;1263:2;1255:11;;;;;-1:-1:-1;1285:6:9;;-1:-1:-1;;;637:660:9:o;1710:508::-;-1:-1:-1;;;;;1899:6:9;1895:55;1884:9;1877:74;1987:2;1982;1971:9;1967:18;1960:30;2026:6;2021:2;2010:9;2006:18;1999:34;2083:6;2075;2070:2;2059:9;2055:18;2042:48;2139:1;2110:22;;;2134:2;2106:31;;;2099:42;;;;2202:2;2181:15;;;-1:-1:-1;;2177:29:9;2162:45;2158:54;;1710:508;-1:-1:-1;;1710:508:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "360200",
								"executionCost": "399",
								"totalCost": "360599"
							},
							"external": {
								"deployProxy(address,bytes)": "infinite",
								"deployProxyWithoutInit(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 1766,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220591506efb01e9c4fbc98b6cc0edcdbc8daad0c7df3a1becd463eef01fb13302364736f6c634300081c0033",
									".code": [
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "8826AC1"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "9F5EED75"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 1766,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1392,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1392,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 570,
											"end": 625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 570,
											"end": 625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 570,
											"end": 625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 552,
											"end": 626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 552,
											"end": 626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 543,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1580,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1617,
											"end": 1631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1583,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1531,
											"end": 1586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1586,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "CREATE",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1711,
											"end": 1725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "3D2489EFB661E8B1C3679865DB649CA1DE61D76A71184A1234DE2E55786A6AAD"
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1726,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1392,
											"end": 1764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1073,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1025,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1025,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "CREATE",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1000,
											"end": 1105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1000,
											"end": 1105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1173,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "3D2489EFB661E8B1C3679865DB649CA1DE61D76A71184A1234DE2E55786A6AAD"
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1174,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1199,
											"end": 1204,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 843,
											"end": 1212,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 843,
											"end": 1212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 366,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1297,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 637,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 732,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 764,
											"end": 771,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 753,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 753,
											"end": 805,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 803,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 805,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 753,
											"end": 805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 843,
											"end": 852,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 824,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 824,
											"end": 853,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 814,
											"end": 853,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 814,
											"end": 853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 904,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 889,
											"end": 907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 876,
											"end": 908,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 931,
											"end": 949,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 923,
											"end": 929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 920,
											"end": 950,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 917,
											"end": 967,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 917,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 917,
											"end": 967,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 963,
											"end": 964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 961,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 953,
											"end": 965,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 917,
											"end": 967,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 917,
											"end": 967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1008,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1054,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1058,
											"end": 1070,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1153,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1120,
											"end": 1170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1120,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1164,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1120,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1195,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1185,
											"end": 1209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1219,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1179,
											"end": 1236,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1179,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1179,
											"end": 1236,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1179,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1179,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1297,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1297,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 2218,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1710,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1877,
											"end": 1951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 1989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1967,
											"end": 1985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2081,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2072,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2090,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2132,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2106,
											"end": 2137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2141,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2204,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2212,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2212,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 2218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 2218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 224,
													"end": 390,
													"name": "PUSH",
													"source": 8,
													"value": "80"
												},
												{
													"begin": 224,
													"end": 390,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 224,
													"end": 390,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "CALLVALUE",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "1"
												},
												{
													"begin": 272,
													"end": 388,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 272,
													"end": 388,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "tag",
													"source": 8,
													"value": "1"
												},
												{
													"begin": 272,
													"end": 388,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 272,
													"end": 388,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSHSIZE",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "CODESIZE",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSHSIZE",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "CODECOPY",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 272,
													"end": 388,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "SWAP1",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "2"
												},
												{
													"begin": 272,
													"end": 388,
													"name": "SWAP2",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 272,
													"end": 388,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "tag",
													"source": 8,
													"value": "2"
												},
												{
													"begin": 272,
													"end": 388,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 363,
													"end": 377,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 379,
													"end": 384,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 1155,
													"end": 1207,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "7"
												},
												{
													"begin": 363,
													"end": 377,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 379,
													"end": 384,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 1155,
													"end": 1184,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "8"
												},
												{
													"begin": 1155,
													"end": 1207,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1155,
													"end": 1207,
													"name": "tag",
													"source": 1,
													"value": "7"
												},
												{
													"begin": 1155,
													"end": 1207,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1081,
													"end": 1214,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 272,
													"end": 388,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 272,
													"end": 388,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 224,
													"end": 390,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "50"
												},
												{
													"begin": 224,
													"end": 390,
													"name": "JUMP",
													"source": 8
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "tag",
													"source": 2,
													"value": "8"
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2355,
													"end": 2392,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "12"
												},
												{
													"begin": 2374,
													"end": 2391,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 2355,
													"end": 2373,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "13"
												},
												{
													"begin": 2355,
													"end": 2392,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2355,
													"end": 2392,
													"name": "tag",
													"source": 2,
													"value": "12"
												},
												{
													"begin": 2355,
													"end": 2392,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "PUSH",
													"source": 2,
													"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 2407,
													"end": 2443,
													"name": "LOG2",
													"source": 2
												},
												{
													"begin": 2458,
													"end": 2469,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 2458,
													"end": 2469,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 2458,
													"end": 2473,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "14"
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "15"
												},
												{
													"begin": 2518,
													"end": 2535,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 2537,
													"end": 2541,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 2489,
													"end": 2517,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "16"
												},
												{
													"begin": 2489,
													"end": 2542,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "tag",
													"source": 2,
													"value": "15"
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2489,
													"end": 2542,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 2264,
													"end": 2608,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "tag",
													"source": 2,
													"value": "14"
												},
												{
													"begin": 2454,
													"end": 2602,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2573,
													"end": 2591,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "18"
												},
												{
													"begin": 2573,
													"end": 2589,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "19"
												},
												{
													"begin": 2573,
													"end": 2591,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2573,
													"end": 2591,
													"name": "tag",
													"source": 2,
													"value": "18"
												},
												{
													"begin": 2573,
													"end": 2591,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 2264,
													"end": 2608,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 2264,
													"end": 2608,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1671,
													"end": 1952,
													"name": "tag",
													"source": 2,
													"value": "13"
												},
												{
													"begin": 1671,
													"end": 1952,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1748,
													"end": 1765,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1748,
													"end": 1777,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 1748,
													"end": 1777,
													"name": "EXTCODESIZE",
													"source": 2
												},
												{
													"begin": 1781,
													"end": 1782,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 1748,
													"end": 1782,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "21"
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "4C9C8CE3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1634,
													"end": 1685,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "PUSH",
													"source": 9,
													"value": "24"
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "tag",
													"source": 2,
													"value": "22"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1852,
													"name": "REVERT",
													"source": 2
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "tag",
													"source": 2,
													"value": "21"
												},
												{
													"begin": 1744,
													"end": 1863,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 811,
													"end": 877,
													"name": "PUSH",
													"source": 2,
													"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "AND",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "OR",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1872,
													"end": 1945,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 1671,
													"end": 1952,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3916,
													"end": 4169,
													"name": "tag",
													"source": 5,
													"value": "16"
												},
												{
													"begin": 3916,
													"end": 4169,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 3999,
													"end": 4011,
													"name": "PUSH",
													"source": 5,
													"value": "60"
												},
												{
													"begin": 4024,
													"end": 4036,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4038,
													"end": 4061,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4071,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 4065,
													"end": 4084,
													"name": "AND",
													"source": 5
												},
												{
													"begin": 4085,
													"end": 4089,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "27"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "28"
												},
												{
													"begin": 4065,
													"end": 4090,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "tag",
													"source": 5,
													"value": "27"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "SUB",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP6",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "GAS",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DELEGATECALL",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "RETURNDATASIZE",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "EQ",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "31"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "1F"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "NOT",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "3F"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "RETURNDATASIZE",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "AND",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "RETURNDATASIZE",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "RETURNDATASIZE",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "RETURNDATACOPY",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "30"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "tag",
													"source": 5,
													"value": "31"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "PUSH",
													"source": 5,
													"value": "60"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "tag",
													"source": 5,
													"value": "30"
												},
												{
													"begin": 4065,
													"end": 4090,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4023,
													"end": 4090,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 4023,
													"end": 4090,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4023,
													"end": 4090,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4107,
													"end": 4162,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "32"
												},
												{
													"begin": 4134,
													"end": 4140,
													"name": "DUP6",
													"source": 5
												},
												{
													"begin": 4023,
													"end": 4090,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 4023,
													"end": 4090,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 4107,
													"end": 4133,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "33"
												},
												{
													"begin": 4107,
													"end": 4162,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4107,
													"end": 4162,
													"name": "tag",
													"source": 5,
													"value": "32"
												},
												{
													"begin": 4107,
													"end": 4162,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4100,
													"end": 4162,
													"name": "SWAP6",
													"source": 5
												},
												{
													"begin": 3916,
													"end": 4169,
													"name": "SWAP5",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 3916,
													"end": 4169,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 6113,
													"end": 6235,
													"name": "tag",
													"source": 2,
													"value": "19"
												},
												{
													"begin": 6113,
													"end": 6235,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 6163,
													"end": 6172,
													"name": "CALLVALUE",
													"source": 2
												},
												{
													"begin": 6163,
													"end": 6176,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "35"
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "B398979F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6199,
													"end": 6218,
													"name": "REVERT",
													"source": 2
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "tag",
													"source": 2,
													"value": "35"
												},
												{
													"begin": 6159,
													"end": 6229,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 6113,
													"end": 6235,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4437,
													"end": 5019,
													"name": "tag",
													"source": 5,
													"value": "33"
												},
												{
													"begin": 4437,
													"end": 5019,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4581,
													"end": 4593,
													"name": "PUSH",
													"source": 5,
													"value": "60"
												},
												{
													"begin": 4610,
													"end": 4617,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "38"
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 4633,
													"end": 4652,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "39"
												},
												{
													"begin": 4641,
													"end": 4651,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4633,
													"end": 4640,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4633,
													"end": 4652,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4633,
													"end": 4652,
													"name": "tag",
													"source": 5,
													"value": "39"
												},
												{
													"begin": 4633,
													"end": 4652,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "41"
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "tag",
													"source": 5,
													"value": "38"
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4857,
													"end": 4874,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 4857,
													"end": 4874,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 4857,
													"end": 4879,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 4857,
													"end": 4906,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 4857,
													"end": 4906,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 4857,
													"end": 4906,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "42"
												},
												{
													"begin": 4857,
													"end": 4906,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 4883,
													"end": 4901,
													"name": "DUP5",
													"source": 5
												},
												{
													"begin": 4883,
													"end": 4901,
													"name": "AND",
													"source": 5
												},
												{
													"begin": 4883,
													"end": 4901,
													"name": "EXTCODESIZE",
													"source": 5
												},
												{
													"begin": 4883,
													"end": 4906,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 4857,
													"end": 4906,
													"name": "tag",
													"source": 5,
													"value": "42"
												},
												{
													"begin": 4857,
													"end": 4906,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4853,
													"end": 4972,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 4853,
													"end": 4972,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "43"
												},
												{
													"begin": 4853,
													"end": 4972,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "9996B315"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "DUP6",
													"source": 9
												},
												{
													"begin": 1652,
													"end": 1684,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "PUSH",
													"source": 5,
													"value": "4"
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 1634,
													"end": 1685,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "PUSH",
													"source": 9,
													"value": "24"
												},
												{
													"begin": 1607,
													"end": 1625,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 4933,
													"end": 4957,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "22"
												},
												{
													"begin": 1488,
													"end": 1691,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 4853,
													"end": 4972,
													"name": "tag",
													"source": 5,
													"value": "43"
												},
												{
													"begin": 4853,
													"end": 4972,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4992,
													"end": 5002,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "tag",
													"source": 5,
													"value": "41"
												},
												{
													"begin": 4605,
													"end": 5013,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 4437,
													"end": 5019,
													"name": "SWAP4",
													"source": 5
												},
												{
													"begin": 4437,
													"end": 5019,
													"name": "SWAP3",
													"source": 5
												},
												{
													"begin": 4437,
													"end": 5019,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4437,
													"end": 5019,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4437,
													"end": 5019,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 4437,
													"end": 5019,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 5559,
													"end": 6046,
													"name": "tag",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 5559,
													"end": 6046,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 5690,
													"end": 5707,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 5690,
													"end": 5707,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 5690,
													"end": 5711,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 5686,
													"end": 6040,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "46"
												},
												{
													"begin": 5686,
													"end": 6040,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 5887,
													"end": 5897,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 5881,
													"end": 5898,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 5943,
													"end": 5958,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 5930,
													"end": 5940,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 5926,
													"end": 5928,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 5922,
													"end": 5941,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 5915,
													"end": 5959,
													"name": "REVERT",
													"source": 5
												},
												{
													"begin": 5686,
													"end": 6040,
													"name": "tag",
													"source": 5,
													"value": "46"
												},
												{
													"begin": 5686,
													"end": 6040,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "D6BDA275"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "PUSH",
													"source": 5,
													"value": "4"
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "SUB",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 6010,
													"end": 6029,
													"name": "REVERT",
													"source": 5
												},
												{
													"begin": 14,
													"end": 141,
													"name": "tag",
													"source": 9,
													"value": "48"
												},
												{
													"begin": 14,
													"end": 141,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 75,
													"end": 85,
													"name": "PUSH",
													"source": 9,
													"value": "4E487B71"
												},
												{
													"begin": 70,
													"end": 73,
													"name": "PUSH",
													"source": 9,
													"value": "E0"
												},
												{
													"begin": 66,
													"end": 86,
													"name": "SHL",
													"source": 9
												},
												{
													"begin": 63,
													"end": 64,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 56,
													"end": 87,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 106,
													"end": 110,
													"name": "PUSH",
													"source": 9,
													"value": "41"
												},
												{
													"begin": 103,
													"end": 104,
													"name": "PUSH",
													"source": 9,
													"value": "4"
												},
												{
													"begin": 96,
													"end": 111,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 130,
													"end": 134,
													"name": "PUSH",
													"source": 9,
													"value": "24"
												},
												{
													"begin": 127,
													"end": 128,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 120,
													"end": 135,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 146,
													"end": 396,
													"name": "tag",
													"source": 9,
													"value": "49"
												},
												{
													"begin": 146,
													"end": 396,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 231,
													"end": 232,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "tag",
													"source": 9,
													"value": "53"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 255,
													"end": 261,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 252,
													"end": 253,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 249,
													"end": 262,
													"name": "LT",
													"source": 9
												},
												{
													"begin": 241,
													"end": 354,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 241,
													"end": 354,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "55"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 331,
													"end": 342,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 331,
													"end": 342,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 331,
													"end": 342,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 325,
													"end": 343,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": 312,
													"end": 323,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 312,
													"end": 323,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 312,
													"end": 323,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 305,
													"end": 344,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 277,
													"end": 279,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 270,
													"end": 280,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 241,
													"end": 354,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "53"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 241,
													"end": 354,
													"name": "tag",
													"source": 9,
													"value": "55"
												},
												{
													"begin": 241,
													"end": 354,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 388,
													"end": 389,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 370,
													"end": 386,
													"name": "SWAP2",
													"source": 9
												},
												{
													"begin": 370,
													"end": 386,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 363,
													"end": 390,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 146,
													"end": 396,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "tag",
													"source": 9,
													"value": "3"
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 489,
													"end": 495,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 497,
													"end": 503,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 550,
													"end": 552,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 538,
													"end": 547,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 529,
													"end": 536,
													"name": "DUP6",
													"source": 9
												},
												{
													"begin": 525,
													"end": 548,
													"name": "SUB",
													"source": 9
												},
												{
													"begin": 521,
													"end": 553,
													"name": "SLT",
													"source": 9
												},
												{
													"begin": 518,
													"end": 570,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 518,
													"end": 570,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "57"
												},
												{
													"begin": 518,
													"end": 570,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 566,
													"end": 567,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 563,
													"end": 564,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 556,
													"end": 568,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 518,
													"end": 570,
													"name": "tag",
													"source": 9,
													"value": "57"
												},
												{
													"begin": 518,
													"end": 570,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 592,
													"end": 608,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 592,
													"end": 608,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 637,
													"end": 668,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 637,
													"end": 668,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 627,
													"end": 669,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 627,
													"end": 669,
													"name": "EQ",
													"source": 9
												},
												{
													"begin": 617,
													"end": 687,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "58"
												},
												{
													"begin": 617,
													"end": 687,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 683,
													"end": 684,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 680,
													"end": 681,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 673,
													"end": 685,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 617,
													"end": 687,
													"name": "tag",
													"source": 9,
													"value": "58"
												},
												{
													"begin": 617,
													"end": 687,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 755,
													"end": 757,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 740,
													"end": 758,
													"name": "DUP5",
													"source": 9
												},
												{
													"begin": 740,
													"end": 758,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 734,
													"end": 759,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": 706,
													"end": 711,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 706,
													"end": 711,
													"name": "SWAP3",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 771,
													"end": 801,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 771,
													"end": 801,
													"name": "GT",
													"source": 9
												},
												{
													"begin": 768,
													"end": 818,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 768,
													"end": 818,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "59"
												},
												{
													"begin": 768,
													"end": 818,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 814,
													"end": 815,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 811,
													"end": 812,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 804,
													"end": 816,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 768,
													"end": 818,
													"name": "tag",
													"source": 9,
													"value": "59"
												},
												{
													"begin": 768,
													"end": 818,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 837,
													"end": 859,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 837,
													"end": 859,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 890,
													"end": 894,
													"name": "PUSH",
													"source": 9,
													"value": "1F"
												},
												{
													"begin": 882,
													"end": 895,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 882,
													"end": 895,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 878,
													"end": 905,
													"name": "DUP6",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SGT",
													"source": -1
												},
												{
													"begin": 868,
													"end": 923,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "60"
												},
												{
													"begin": 868,
													"end": 923,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 919,
													"end": 920,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 916,
													"end": 917,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 909,
													"end": 921,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 868,
													"end": 923,
													"name": "tag",
													"source": 9,
													"value": "60"
												},
												{
													"begin": 868,
													"end": 923,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 946,
													"end": 955,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 946,
													"end": 955,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 967,
													"end": 997,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 967,
													"end": 997,
													"name": "GT",
													"source": 9
												},
												{
													"begin": 964,
													"end": 1020,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 964,
													"end": 1020,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "62"
												},
												{
													"begin": 964,
													"end": 1020,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "62"
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "48"
												},
												{
													"begin": 1000,
													"end": 1018,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "tag",
													"source": 9,
													"value": "62"
												},
												{
													"begin": 1000,
													"end": 1018,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1049,
													"end": 1051,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 1043,
													"end": 1052,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": 1141,
													"end": 1143,
													"name": "PUSH",
													"source": 9,
													"value": "1F"
												},
												{
													"begin": 1103,
													"end": 1120,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1103,
													"end": 1120,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1099,
													"end": 1130,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 1099,
													"end": 1130,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1099,
													"end": 1130,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 1132,
													"end": 1134,
													"name": "PUSH",
													"source": 9,
													"value": "3F"
												},
												{
													"begin": 1095,
													"end": 1135,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1091,
													"end": 1145,
													"name": "AND",
													"source": 9
												},
												{
													"begin": 1079,
													"end": 1146,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1079,
													"end": 1146,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1161,
													"end": 1195,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1161,
													"end": 1195,
													"name": "GT",
													"source": 9
												},
												{
													"begin": 1197,
													"end": 1219,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1197,
													"end": 1219,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1197,
													"end": 1219,
													"name": "LT",
													"source": 9
												},
												{
													"begin": 1158,
													"end": 1220,
													"name": "OR",
													"source": 9
												},
												{
													"begin": 1155,
													"end": 1243,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 1155,
													"end": 1243,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "64"
												},
												{
													"begin": 1155,
													"end": 1243,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "64"
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "48"
												},
												{
													"begin": 1223,
													"end": 1241,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "tag",
													"source": 9,
													"value": "64"
												},
												{
													"begin": 1223,
													"end": 1241,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1259,
													"end": 1261,
													"name": "PUSH",
													"source": 9,
													"value": "40"
												},
												{
													"begin": 1252,
													"end": 1274,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 1283,
													"end": 1305,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1283,
													"end": 1305,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1283,
													"end": 1305,
													"name": "MSTORE",
													"source": 9
												},
												{
													"begin": 1324,
													"end": 1339,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1324,
													"end": 1339,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1324,
													"end": 1339,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1341,
													"end": 1343,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 1320,
													"end": 1344,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1317,
													"end": 1354,
													"name": "DUP8",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "LT",
													"source": -1
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "ISZERO",
													"source": 9
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "65"
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "JUMPI",
													"source": 9
												},
												{
													"begin": 1367,
													"end": 1368,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 1364,
													"end": 1365,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 1357,
													"end": 1369,
													"name": "REVERT",
													"source": 9
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "tag",
													"source": 9,
													"value": "65"
												},
												{
													"begin": 1314,
													"end": 1371,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "66"
												},
												{
													"begin": 1445,
													"end": 1451,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1440,
													"end": 1442,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 1432,
													"end": 1438,
													"name": "DUP4",
													"source": 9
												},
												{
													"begin": 1428,
													"end": 1443,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1423,
													"end": 1425,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 1419,
													"end": 1421,
													"name": "DUP7",
													"source": 9
												},
												{
													"begin": 1415,
													"end": 1426,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "49"
												},
												{
													"begin": 1380,
													"end": 1452,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "tag",
													"source": 9,
													"value": "66"
												},
												{
													"begin": 1380,
													"end": 1452,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1471,
													"end": 1477,
													"name": "DUP1",
													"source": 9
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "SWAP4",
													"source": 9
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 1461,
													"end": 1477,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "SWAP3",
													"source": 9
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "SWAP3",
													"source": 9
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 401,
													"end": 1483,
													"name": "POP",
													"source": 9
												},
												{
													"begin": 401,
													"end": 1483,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "tag",
													"source": 9,
													"value": "28"
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1825,
													"end": 1828,
													"name": "PUSH",
													"source": 9,
													"value": "0"
												},
												{
													"begin": 1863,
													"end": 1869,
													"name": "DUP3",
													"source": 9
												},
												{
													"begin": 1857,
													"end": 1870,
													"name": "MLOAD",
													"source": 9
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "69"
												},
												{
													"begin": 1938,
													"end": 1944,
													"name": "DUP2",
													"source": 9
												},
												{
													"begin": 1933,
													"end": 1936,
													"name": "DUP5",
													"source": 9
												},
												{
													"begin": 1926,
													"end": 1930,
													"name": "PUSH",
													"source": 9,
													"value": "20"
												},
												{
													"begin": 1918,
													"end": 1924,
													"name": "DUP8",
													"source": 9
												},
												{
													"begin": 1914,
													"end": 1931,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "PUSH [tag]",
													"source": 9,
													"value": "49"
												},
												{
													"begin": 1879,
													"end": 1945,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "tag",
													"source": 9,
													"value": "69"
												},
												{
													"begin": 1879,
													"end": 1945,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP2",
													"source": 9
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP1",
													"source": 9
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP2",
													"source": 9
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "ADD",
													"source": 9
												},
												{
													"begin": 1961,
													"end": 1977,
													"name": "SWAP3",
													"source": 9
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "SWAP2",
													"source": 9
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1696,
													"end": 1983,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 9
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "tag",
													"source": 9,
													"value": "50"
												},
												{
													"begin": 1696,
													"end": 1983,
													"name": "JUMPDEST",
													"source": 9
												},
												{
													"begin": 224,
													"end": 390,
													"name": "PUSH #[$]",
													"source": 8,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 224,
													"end": 390,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 224,
													"end": 390,
													"name": "PUSH [$]",
													"source": 8,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 224,
													"end": 390,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 224,
													"end": 390,
													"name": "CODECOPY",
													"source": 8
												},
												{
													"begin": 224,
													"end": 390,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 224,
													"end": 390,
													"name": "RETURN",
													"source": 8
												}
											],
											".data": {
												"0": {
													".auxdata": "a264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033",
													".code": [
														{
															"begin": 224,
															"end": 390,
															"name": "PUSH",
															"source": 8,
															"value": "80"
														},
														{
															"begin": 224,
															"end": 390,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 224,
															"end": 390,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 2649,
															"end": 2660,
															"name": "PUSH [tag]",
															"source": 3,
															"value": "5"
														},
														{
															"begin": 2649,
															"end": 2658,
															"name": "PUSH [tag]",
															"source": 3,
															"value": "6"
														},
														{
															"begin": 2649,
															"end": 2660,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 3
														},
														{
															"begin": 2649,
															"end": 2660,
															"name": "tag",
															"source": 3,
															"value": "5"
														},
														{
															"begin": 2649,
															"end": 2660,
															"name": "JUMPDEST",
															"source": 3
														},
														{
															"begin": 224,
															"end": 390,
															"name": "STOP",
															"source": 8
														},
														{
															"begin": 2323,
															"end": 2406,
															"name": "tag",
															"source": 3,
															"value": "6"
														},
														{
															"begin": 2323,
															"end": 2406,
															"name": "JUMPDEST",
															"source": 3
														},
														{
															"begin": 2371,
															"end": 2399,
															"name": "PUSH [tag]",
															"source": 3,
															"value": "8"
														},
														{
															"begin": 2381,
															"end": 2398,
															"name": "PUSH [tag]",
															"source": 3,
															"value": "9"
														},
														{
															"begin": 2381,
															"end": 2396,
															"name": "PUSH [tag]",
															"source": 3,
															"value": "10"
														},
														{
															"begin": 2381,
															"end": 2398,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 3
														},
														{
															"begin": 2381,
															"end": 2398,
															"name": "tag",
															"source": 3,
															"value": "9"
														},
														{
															"begin": 2381,
															"end": 2398,
															"name": "JUMPDEST",
															"source": 3
														},
														{
															"begin": 2371,
															"end": 2380,
															"name": "PUSH [tag]",
															"source": 3,
															"value": "11"
														},
														{
															"begin": 2371,
															"end": 2399,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 3
														},
														{
															"begin": 2371,
															"end": 2399,
															"name": "tag",
															"source": 3,
															"value": "8"
														},
														{
															"begin": 2371,
															"end": 2399,
															"name": "JUMPDEST",
															"source": 3
														},
														{
															"begin": 2323,
															"end": 2406,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 3
														},
														{
															"begin": 1583,
															"end": 1715,
															"name": "tag",
															"source": 1,
															"value": "10"
														},
														{
															"begin": 1583,
															"end": 1715,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1650,
															"end": 1657,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 1676,
															"end": 1708,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "13"
														},
														{
															"begin": 811,
															"end": 877,
															"name": "PUSH",
															"source": 2,
															"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
														},
														{
															"begin": 1519,
															"end": 1572,
															"name": "SLOAD",
															"source": 2
														},
														{
															"begin": 1519,
															"end": 1572,
															"name": "PUSH",
															"source": 2,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1519,
															"end": 1572,
															"name": "AND",
															"source": 2
														},
														{
															"begin": 1519,
															"end": 1572,
															"name": "SWAP1",
															"source": 2
														},
														{
															"begin": 1441,
															"end": 1579,
															"name": "JUMP",
															"source": 2
														},
														{
															"begin": 1676,
															"end": 1708,
															"name": "tag",
															"source": 1,
															"value": "13"
														},
														{
															"begin": 1676,
															"end": 1708,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1669,
															"end": 1708,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1669,
															"end": 1708,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 1583,
															"end": 1715,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1583,
															"end": 1715,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 949,
															"end": 1844,
															"name": "tag",
															"source": 3,
															"value": "11"
														},
														{
															"begin": 949,
															"end": 1844,
															"name": "JUMPDEST",
															"source": 3
														},
														{
															"begin": 1287,
															"end": 1301,
															"name": "CALLDATASIZE",
															"source": 3
														},
														{
															"begin": 1284,
															"end": 1285,
															"name": "PUSH",
															"source": 3,
															"value": "0"
														},
														{
															"begin": 1281,
															"end": 1282,
															"name": "DUP1",
															"source": 3
														},
														{
															"begin": 1268,
															"end": 1302,
															"name": "CALLDATACOPY",
															"source": 3
														},
														{
															"begin": 1501,
															"end": 1502,
															"name": "PUSH",
															"source": 3,
															"value": "0"
														},
														{
															"begin": 1498,
															"end": 1499,
															"name": "DUP1",
															"source": 3
														},
														{
															"begin": 1482,
															"end": 1496,
															"name": "CALLDATASIZE",
															"source": 3
														},
														{
															"begin": 1479,
															"end": 1480,
															"name": "PUSH",
															"source": 3,
															"value": "0"
														},
														{
															"begin": 1463,
															"end": 1477,
															"name": "DUP5",
															"source": 3
														},
														{
															"begin": 1456,
															"end": 1461,
															"name": "GAS",
															"source": 3
														},
														{
															"begin": 1443,
															"end": 1503,
															"name": "DELEGATECALL",
															"source": 3
														},
														{
															"begin": 1577,
															"end": 1593,
															"name": "RETURNDATASIZE",
															"source": 3
														},
														{
															"begin": 1574,
															"end": 1575,
															"name": "PUSH",
															"source": 3,
															"value": "0"
														},
														{
															"begin": 1571,
															"end": 1572,
															"name": "DUP1",
															"source": 3
														},
														{
															"begin": 1556,
															"end": 1594,
															"name": "RETURNDATACOPY",
															"source": 3
														},
														{
															"begin": 1615,
															"end": 1621,
															"name": "DUP1",
															"source": 3
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "DUP1",
															"source": 3
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "ISZERO",
															"source": 3
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "PUSH [tag]",
															"source": 3,
															"value": "17"
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "JUMPI",
															"source": 3
														},
														{
															"begin": 1797,
															"end": 1813,
															"name": "RETURNDATASIZE",
															"source": 3
														},
														{
															"begin": 1794,
															"end": 1795,
															"name": "PUSH",
															"source": 3,
															"value": "0"
														},
														{
															"begin": 1787,
															"end": 1814,
															"name": "RETURN",
															"source": 3
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "tag",
															"source": 3,
															"value": "17"
														},
														{
															"begin": 1682,
															"end": 1748,
															"name": "JUMPDEST",
															"source": 3
														},
														{
															"begin": 1717,
															"end": 1733,
															"name": "RETURNDATASIZE",
															"source": 3
														},
														{
															"begin": 1714,
															"end": 1715,
															"name": "PUSH",
															"source": 3,
															"value": "0"
														},
														{
															"begin": 1707,
															"end": 1734,
															"name": "REVERT",
															"source": 3
														}
													]
												}
											}
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deployProxy(address,bytes)": "9f5eed75",
							"deployProxyWithoutInit(address)": "08826ac1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ProxyDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"deployProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"deployProxyWithoutInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Helper contract to deploy proxies for any contract with any initialization data\",\"kind\":\"dev\",\"methods\":{\"deployProxy(address,bytes)\":{\"details\":\"Deploy a proxy with custom initialization data\",\"params\":{\"implementation\":\"Address of the implementation contract\",\"initData\":\"Encoded initialization function call\"}},\"deployProxyWithoutInit(address)\":{\"details\":\"Deploy a proxy without initialization (for contracts with no initializer)\",\"params\":{\"implementation\":\"Address of the implementation contract\"}}},\"title\":\"GenericProxyDeployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy.sol\":\"GenericProxyDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"proxy.sol\":{\"keccak256\":\"0xc9d62d57cc37075cc21c5967c5e0756f1a2a2f031206d9ea8020616dd620a184\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://117d2d0f21d42f4ff718b2abc08398eb4a7e5a14c4c86ef6db2661d42b9fa57d\",\"dweb:/ipfs/QmQoAEv9hUjH4pghS6hrLAmUcMLCKKq4UpUpbgztEbGKQS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GenericUUPSProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "Generic proxy contract for any UUPS upgradeable contract",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "GenericUUPSProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"proxy.sol\":272:388  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"proxy.sol\":363:377  implementation */\n  dup2\n    /* \"proxy.sol\":379:384  _data */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_7\n    /* \"proxy.sol\":363:377  implementation */\n  dup3\n    /* \"proxy.sol\":379:384  _data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n  tag_8\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"proxy.sol\":272:388  constructor(... */\n  pop\n  pop\n    /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n  jump(tag_50)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_8:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  tag_12\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n  tag_13\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  tag_15\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n  tag_16\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  tag_18\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n  tag_19\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\ntag_13:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe0, 0x4c9c8ce3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1652:1684   */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1634:1685   */\n  mstore\n    /* \"#utility.yul\":1607:1625   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n  mload(0x40)\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_31\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_30)\ntag_31:\n  0x60\n  swap2\n  pop\ntag_30:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n  tag_32\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n  tag_33\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n  swap6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\ntag_19:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mload(0x40)\n  shl(0xe0, 0xb398979f)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n  tag_39\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n  tag_40\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n  jump(tag_41)\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_42\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n  dup5\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\ntag_42:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1652:1684   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1634:1685   */\n  mstore\n    /* \"#utility.yul\":1607:1625   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n  tag_22\n    /* \"#utility.yul\":1488:1691   */\n  jump\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_43:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\ntag_40:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n  mload(0x40)\n  shl(0xe0, 0xd6bda275)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":14:141   */\ntag_48:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_49:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_53:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_53)\ntag_55:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1483   */\ntag_3:\n    /* \"#utility.yul\":489:495   */\n  0x00\n    /* \"#utility.yul\":497:503   */\n  dup1\n    /* \"#utility.yul\":550:552   */\n  0x40\n    /* \"#utility.yul\":538:547   */\n  dup4\n    /* \"#utility.yul\":529:536   */\n  dup6\n    /* \"#utility.yul\":525:548   */\n  sub\n    /* \"#utility.yul\":521:553   */\n  slt\n    /* \"#utility.yul\":518:570   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":518:570   */\ntag_57:\n    /* \"#utility.yul\":592:608   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":637:668   */\n  dup2\n  and\n    /* \"#utility.yul\":627:669   */\n  dup2\n  eq\n    /* \"#utility.yul\":617:687   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":683:684   */\n  0x00\n    /* \"#utility.yul\":680:681   */\n  dup1\n    /* \"#utility.yul\":673:685   */\n  revert\n    /* \"#utility.yul\":617:687   */\ntag_58:\n    /* \"#utility.yul\":755:757   */\n  0x20\n    /* \"#utility.yul\":740:758   */\n  dup5\n  add\n    /* \"#utility.yul\":734:759   */\n  mload\n    /* \"#utility.yul\":706:711   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":771:801   */\n  dup2\n  gt\n    /* \"#utility.yul\":768:818   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":814:815   */\n  0x00\n    /* \"#utility.yul\":811:812   */\n  dup1\n    /* \"#utility.yul\":804:816   */\n  revert\n    /* \"#utility.yul\":768:818   */\ntag_59:\n    /* \"#utility.yul\":837:859   */\n  dup4\n  add\n    /* \"#utility.yul\":890:894   */\n  0x1f\n    /* \"#utility.yul\":882:895   */\n  dup2\n  add\n    /* \"#utility.yul\":878:905   */\n  dup6\n  sgt\n    /* \"#utility.yul\":868:923   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":919:920   */\n  0x00\n    /* \"#utility.yul\":916:917   */\n  dup1\n    /* \"#utility.yul\":909:921   */\n  revert\n    /* \"#utility.yul\":868:923   */\ntag_60:\n    /* \"#utility.yul\":946:955   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":967:997   */\n  dup2\n  gt\n    /* \"#utility.yul\":964:1020   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1000:1018   */\n  tag_62\n  tag_48\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1049:1051   */\n  0x40\n    /* \"#utility.yul\":1043:1052   */\n  mload\n    /* \"#utility.yul\":1141:1143   */\n  0x1f\n    /* \"#utility.yul\":1103:1120   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1099:1130   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1132:1134   */\n  0x3f\n    /* \"#utility.yul\":1095:1135   */\n  add\n    /* \"#utility.yul\":1091:1145   */\n  and\n    /* \"#utility.yul\":1079:1146   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1161:1195   */\n  dup2\n  gt\n    /* \"#utility.yul\":1197:1219   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":1158:1220   */\n  or\n    /* \"#utility.yul\":1155:1243   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1223:1241   */\n  tag_64\n  tag_48\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1259:1261   */\n  0x40\n    /* \"#utility.yul\":1252:1274   */\n  mstore\n    /* \"#utility.yul\":1283:1305   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":1324:1339   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":1341:1343   */\n  0x20\n    /* \"#utility.yul\":1320:1344   */\n  add\n    /* \"#utility.yul\":1317:1354   */\n  dup8\n  lt\n    /* \"#utility.yul\":1314:1371   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1367:1368   */\n  0x00\n    /* \"#utility.yul\":1364:1365   */\n  dup1\n    /* \"#utility.yul\":1357:1369   */\n  revert\n    /* \"#utility.yul\":1314:1371   */\ntag_65:\n    /* \"#utility.yul\":1380:1452   */\n  tag_66\n    /* \"#utility.yul\":1445:1451   */\n  dup3\n    /* \"#utility.yul\":1440:1442   */\n  0x20\n    /* \"#utility.yul\":1432:1438   */\n  dup4\n    /* \"#utility.yul\":1428:1443   */\n  add\n    /* \"#utility.yul\":1423:1425   */\n  0x20\n    /* \"#utility.yul\":1419:1421   */\n  dup7\n    /* \"#utility.yul\":1415:1426   */\n  add\n    /* \"#utility.yul\":1380:1452   */\n  tag_49\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1471:1477   */\n  dup1\n    /* \"#utility.yul\":1461:1477   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":401:1483   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1696:1983   */\ntag_28:\n    /* \"#utility.yul\":1825:1828   */\n  0x00\n    /* \"#utility.yul\":1863:1869   */\n  dup3\n    /* \"#utility.yul\":1857:1870   */\n  mload\n    /* \"#utility.yul\":1879:1945   */\n  tag_69\n    /* \"#utility.yul\":1938:1944   */\n  dup2\n    /* \"#utility.yul\":1933:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1930   */\n  0x20\n    /* \"#utility.yul\":1918:1924   */\n  dup8\n    /* \"#utility.yul\":1914:1931   */\n  add\n    /* \"#utility.yul\":1879:1945   */\n  tag_49\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1961:1977   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":1696:1983   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_50:\n    /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"proxy.sol\":224:390  contract GenericUUPSProxy is ERC1967Proxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n      tag_13\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n    tag_13:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup1\n      iszero\n      tag_17\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_351": {
									"entryPoint": 406,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_657": {
									"entryPoint": 534,
									"id": 657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_131": {
									"entryPoint": 163,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_575": {
									"entryPoint": 287,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_167": {
									"entryPoint": 68,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 439,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1985:9",
										"nodeType": "YulBlock",
										"src": "0:1985:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:9",
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:9",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:9",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:9",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nativeSrc": "66:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nativeSrc": "56:31:9",
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nativeSrc": "56:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:9",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:9",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nativeSrc": "96:15:9",
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nativeSrc": "96:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:9",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:9",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nativeSrc": "120:15:9",
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nativeSrc": "120:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nativeSrc": "212:184:9",
													"nodeType": "YulBlock",
													"src": "212:184:9",
													"statements": [
														{
															"nativeSrc": "222:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "222:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "231:1:9",
																"nodeType": "YulLiteral",
																"src": "231:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "226:1:9",
																	"nodeType": "YulTypedName",
																	"src": "226:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "291:63:9",
																"nodeType": "YulBlock",
																"src": "291:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "316:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "316:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "321:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "321:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "312:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "312:3:9"
																					},
																					"nativeSrc": "312:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "312:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "335:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "340:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "340:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "331:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "331:3:9"
																							},
																							"nativeSrc": "331:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "331:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "325:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "325:5:9"
																					},
																					"nativeSrc": "325:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "325:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "305:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:9"
																			},
																			"nativeSrc": "305:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "305:39:9"
																		},
																		"nativeSrc": "305:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "305:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "252:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "252:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "255:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "255:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "249:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "249:2:9"
																},
																"nativeSrc": "249:13:9",
																"nodeType": "YulFunctionCall",
																"src": "249:13:9"
															},
															"nativeSrc": "241:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "263:19:9",
																"nodeType": "YulBlock",
																"src": "263:19:9",
																"statements": [
																	{
																		"nativeSrc": "265:15:9",
																		"nodeType": "YulAssignment",
																		"src": "265:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "274:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "274:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:2:9",
																					"nodeType": "YulLiteral",
																					"src": "277:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "270:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:9"
																			},
																			"nativeSrc": "270:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "270:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "265:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "265:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "245:3:9",
																"nodeType": "YulBlock",
																"src": "245:3:9",
																"statements": []
															},
															"src": "241:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "374:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "379:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:9"
																		},
																		"nativeSrc": "370:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "370:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "388:1:9",
																		"nodeType": "YulLiteral",
																		"src": "388:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "363:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:9"
																},
																"nativeSrc": "363:27:9",
																"nodeType": "YulFunctionCall",
																"src": "363:27:9"
															},
															"nativeSrc": "363:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "363:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "146:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "190:3:9",
														"nodeType": "YulTypedName",
														"src": "190:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "195:3:9",
														"nodeType": "YulTypedName",
														"src": "195:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "200:6:9",
														"nodeType": "YulTypedName",
														"src": "200:6:9",
														"type": ""
													}
												],
												"src": "146:250:9"
											},
											{
												"body": {
													"nativeSrc": "508:975:9",
													"nodeType": "YulBlock",
													"src": "508:975:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "554:16:9",
																"nodeType": "YulBlock",
																"src": "554:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "563:1:9",
																					"nodeType": "YulLiteral",
																					"src": "563:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "566:1:9",
																					"nodeType": "YulLiteral",
																					"src": "566:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "556:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "556:6:9"
																			},
																			"nativeSrc": "556:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "556:12:9"
																		},
																		"nativeSrc": "556:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "556:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "529:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "529:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "538:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "525:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:9"
																		},
																		"nativeSrc": "525:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "525:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:9",
																		"nodeType": "YulLiteral",
																		"src": "550:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "521:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:9"
																},
																"nativeSrc": "521:32:9",
																"nodeType": "YulFunctionCall",
																"src": "521:32:9"
															},
															"nativeSrc": "518:52:9",
															"nodeType": "YulIf",
															"src": "518:52:9"
														},
														{
															"nativeSrc": "579:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "579:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "598:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "592:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:9"
																},
																"nativeSrc": "592:16:9",
																"nodeType": "YulFunctionCall",
																"src": "592:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "583:5:9",
																	"nodeType": "YulTypedName",
																	"src": "583:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "671:16:9",
																"nodeType": "YulBlock",
																"src": "671:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "683:1:9",
																					"nodeType": "YulLiteral",
																					"src": "683:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "673:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:9"
																			},
																			"nativeSrc": "673:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:9"
																		},
																		"nativeSrc": "673:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "630:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "641:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "641:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "656:3:9",
																										"nodeType": "YulLiteral",
																										"src": "656:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "661:1:9",
																										"nodeType": "YulLiteral",
																										"src": "661:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "652:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "652:3:9"
																								},
																								"nativeSrc": "652:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "652:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "665:1:9",
																								"nodeType": "YulLiteral",
																								"src": "665:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "648:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "648:3:9"
																						},
																						"nativeSrc": "648:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "648:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "637:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:9"
																				},
																				"nativeSrc": "637:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "637:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "627:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:9"
																		},
																		"nativeSrc": "627:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "627:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "620:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:9"
																},
																"nativeSrc": "620:50:9",
																"nodeType": "YulFunctionCall",
																"src": "620:50:9"
															},
															"nativeSrc": "617:70:9",
															"nodeType": "YulIf",
															"src": "617:70:9"
														},
														{
															"nativeSrc": "696:15:9",
															"nodeType": "YulAssignment",
															"src": "696:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "706:5:9",
																"nodeType": "YulIdentifier",
																"src": "706:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "696:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:9"
																}
															]
														},
														{
															"nativeSrc": "720:39:9",
															"nodeType": "YulVariableDeclaration",
															"src": "720:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "744:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "744:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "755:2:9",
																				"nodeType": "YulLiteral",
																				"src": "755:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "740:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:9"
																		},
																		"nativeSrc": "740:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "740:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "734:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:9"
																},
																"nativeSrc": "734:25:9",
																"nodeType": "YulFunctionCall",
																"src": "734:25:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "724:6:9",
																	"nodeType": "YulTypedName",
																	"src": "724:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "802:16:9",
																"nodeType": "YulBlock",
																"src": "802:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "811:1:9",
																					"nodeType": "YulLiteral",
																					"src": "811:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "814:1:9",
																					"nodeType": "YulLiteral",
																					"src": "814:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "804:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "804:6:9"
																			},
																			"nativeSrc": "804:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "804:12:9"
																		},
																		"nativeSrc": "804:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "774:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "790:2:9",
																						"nodeType": "YulLiteral",
																						"src": "790:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "794:1:9",
																						"nodeType": "YulLiteral",
																						"src": "794:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "786:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "786:3:9"
																				},
																				"nativeSrc": "786:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "786:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "798:1:9",
																				"nodeType": "YulLiteral",
																				"src": "798:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "782:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:9"
																		},
																		"nativeSrc": "782:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "782:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "771:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "771:2:9"
																},
																"nativeSrc": "771:30:9",
																"nodeType": "YulFunctionCall",
																"src": "771:30:9"
															},
															"nativeSrc": "768:50:9",
															"nodeType": "YulIf",
															"src": "768:50:9"
														},
														{
															"nativeSrc": "827:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "827:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "841:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "841:9:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "852:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "852:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "837:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:9"
																},
																"nativeSrc": "837:22:9",
																"nodeType": "YulFunctionCall",
																"src": "837:22:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "831:2:9",
																	"nodeType": "YulTypedName",
																	"src": "831:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "907:16:9",
																"nodeType": "YulBlock",
																"src": "907:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "916:1:9",
																					"nodeType": "YulLiteral",
																					"src": "916:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "919:1:9",
																					"nodeType": "YulLiteral",
																					"src": "919:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "909:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "909:6:9"
																			},
																			"nativeSrc": "909:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "909:12:9"
																		},
																		"nativeSrc": "909:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "909:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "886:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "886:2:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "890:4:9",
																						"nodeType": "YulLiteral",
																						"src": "890:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "882:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "882:3:9"
																				},
																				"nativeSrc": "882:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "882:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "897:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "897:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "878:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:9"
																		},
																		"nativeSrc": "878:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "878:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "871:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:9"
																},
																"nativeSrc": "871:35:9",
																"nodeType": "YulFunctionCall",
																"src": "871:35:9"
															},
															"nativeSrc": "868:55:9",
															"nodeType": "YulIf",
															"src": "868:55:9"
														},
														{
															"nativeSrc": "932:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "932:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "952:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "952:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "946:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "946:5:9"
																},
																"nativeSrc": "946:9:9",
																"nodeType": "YulFunctionCall",
																"src": "946:9:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "936:6:9",
																	"nodeType": "YulTypedName",
																	"src": "936:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "998:22:9",
																"nodeType": "YulBlock",
																"src": "998:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1000:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1000:16:9"
																			},
																			"nativeSrc": "1000:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1000:18:9"
																		},
																		"nativeSrc": "1000:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1000:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "986:2:9",
																						"nodeType": "YulLiteral",
																						"src": "986:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "990:1:9",
																						"nodeType": "YulLiteral",
																						"src": "990:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "982:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "982:3:9"
																				},
																				"nativeSrc": "982:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "982:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "994:1:9",
																				"nodeType": "YulLiteral",
																				"src": "994:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "978:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:9"
																		},
																		"nativeSrc": "978:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "978:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "967:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "967:2:9"
																},
																"nativeSrc": "967:30:9",
																"nodeType": "YulFunctionCall",
																"src": "967:30:9"
															},
															"nativeSrc": "964:56:9",
															"nodeType": "YulIf",
															"src": "964:56:9"
														},
														{
															"nativeSrc": "1029:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1049:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1043:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1043:5:9"
																},
																"nativeSrc": "1043:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1043:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1033:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1033:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1061:85:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1061:85:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1083:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1083:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "1107:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "1107:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1115:4:9",
																										"nodeType": "YulLiteral",
																										"src": "1115:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1103:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1103:3:9"
																								},
																								"nativeSrc": "1103:17:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1103:17:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1126:2:9",
																										"nodeType": "YulLiteral",
																										"src": "1126:2:9",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1122:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1122:3:9"
																								},
																								"nativeSrc": "1122:7:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1122:7:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1099:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1099:3:9"
																						},
																						"nativeSrc": "1099:31:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1099:31:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1132:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1132:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1095:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:9"
																				},
																				"nativeSrc": "1095:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1095:40:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1141:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1141:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1137:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1137:3:9"
																				},
																				"nativeSrc": "1137:7:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1137:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1091:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:9"
																		},
																		"nativeSrc": "1091:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1091:54:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1079:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1079:3:9"
																},
																"nativeSrc": "1079:67:9",
																"nodeType": "YulFunctionCall",
																"src": "1079:67:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1065:10:9",
																	"nodeType": "YulTypedName",
																	"src": "1065:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1221:22:9",
																"nodeType": "YulBlock",
																"src": "1221:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1223:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1223:16:9"
																			},
																			"nativeSrc": "1223:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1223:18:9"
																		},
																		"nativeSrc": "1223:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1164:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1164:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1184:2:9",
																								"nodeType": "YulLiteral",
																								"src": "1184:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1188:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1188:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1180:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1180:3:9"
																						},
																						"nativeSrc": "1180:10:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1180:10:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1192:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1192:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1176:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1176:3:9"
																				},
																				"nativeSrc": "1176:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1176:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1161:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1161:2:9"
																		},
																		"nativeSrc": "1161:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1200:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1200:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1212:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1212:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1197:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1197:2:9"
																		},
																		"nativeSrc": "1197:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1197:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1158:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1158:2:9"
																},
																"nativeSrc": "1158:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1158:62:9"
															},
															"nativeSrc": "1155:88:9",
															"nodeType": "YulIf",
															"src": "1155:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1259:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1259:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1263:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1263:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1252:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:9"
																},
																"nativeSrc": "1252:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1252:22:9"
															},
															"nativeSrc": "1252:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1252:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1290:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1290:6:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1298:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1298:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1283:6:9"
																},
																"nativeSrc": "1283:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1283:22:9"
															},
															"nativeSrc": "1283:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1283:22:9"
														},
														{
															"body": {
																"nativeSrc": "1355:16:9",
																"nodeType": "YulBlock",
																"src": "1355:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1364:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1364:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1367:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1367:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1357:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:9"
																			},
																			"nativeSrc": "1357:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1357:12:9"
																		},
																		"nativeSrc": "1357:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1328:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1328:2:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1332:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1332:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1324:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:9"
																				},
																				"nativeSrc": "1324:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1324:15:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1341:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1341:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:9"
																		},
																		"nativeSrc": "1320:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1346:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1346:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1317:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1317:2:9"
																},
																"nativeSrc": "1317:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1317:37:9"
															},
															"nativeSrc": "1314:57:9",
															"nodeType": "YulIf",
															"src": "1314:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1419:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1419:2:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1423:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:9"
																		},
																		"nativeSrc": "1415:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1432:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1432:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1440:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1440:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1428:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:9"
																		},
																		"nativeSrc": "1428:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1428:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1445:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1445:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1380:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1380:34:9"
																},
																"nativeSrc": "1380:72:9",
																"nodeType": "YulFunctionCall",
																"src": "1380:72:9"
															},
															"nativeSrc": "1380:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "1380:72:9"
														},
														{
															"nativeSrc": "1461:16:9",
															"nodeType": "YulAssignment",
															"src": "1461:16:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1471:6:9",
																"nodeType": "YulIdentifier",
																"src": "1471:6:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1461:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "401:1082:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "466:9:9",
														"nodeType": "YulTypedName",
														"src": "466:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "477:7:9",
														"nodeType": "YulTypedName",
														"src": "477:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "489:6:9",
														"nodeType": "YulTypedName",
														"src": "489:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "497:6:9",
														"nodeType": "YulTypedName",
														"src": "497:6:9",
														"type": ""
													}
												],
												"src": "401:1082:9"
											},
											{
												"body": {
													"nativeSrc": "1589:102:9",
													"nodeType": "YulBlock",
													"src": "1589:102:9",
													"statements": [
														{
															"nativeSrc": "1599:26:9",
															"nodeType": "YulAssignment",
															"src": "1599:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1611:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1611:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1622:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1607:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:9"
																},
																"nativeSrc": "1607:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1607:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1599:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1599:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1641:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1641:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1656:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1672:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1672:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1677:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1677:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1668:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1668:3:9"
																						},
																						"nativeSrc": "1668:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1668:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1681:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1681:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1664:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1664:3:9"
																				},
																				"nativeSrc": "1664:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1664:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:9"
																		},
																		"nativeSrc": "1652:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1652:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:9"
																},
																"nativeSrc": "1634:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1634:51:9"
															},
															"nativeSrc": "1634:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1634:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1488:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1558:9:9",
														"nodeType": "YulTypedName",
														"src": "1558:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1569:6:9",
														"nodeType": "YulTypedName",
														"src": "1569:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1580:4:9",
														"nodeType": "YulTypedName",
														"src": "1580:4:9",
														"type": ""
													}
												],
												"src": "1488:203:9"
											},
											{
												"body": {
													"nativeSrc": "1833:150:9",
													"nodeType": "YulBlock",
													"src": "1833:150:9",
													"statements": [
														{
															"nativeSrc": "1843:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1843:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1863:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1863:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1857:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1857:5:9"
																},
																"nativeSrc": "1857:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1857:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1847:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1847:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1918:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1918:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1926:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1926:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1914:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1914:3:9"
																		},
																		"nativeSrc": "1914:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1914:17:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1933:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1933:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1938:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1938:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1879:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1879:34:9"
																},
																"nativeSrc": "1879:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1879:66:9"
															},
															"nativeSrc": "1879:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "1879:66:9"
														},
														{
															"nativeSrc": "1954:23:9",
															"nodeType": "YulAssignment",
															"src": "1954:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1965:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1965:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1961:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:9"
																},
																"nativeSrc": "1961:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1961:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1696:287:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1809:3:9",
														"nodeType": "YulTypedName",
														"src": "1809:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1814:6:9",
														"nodeType": "YulTypedName",
														"src": "1814:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1825:3:9",
														"nodeType": "YulTypedName",
														"src": "1825:3:9",
														"type": ""
													}
												],
												"src": "1696:287:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), length)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161042e38038061042e83398101604081905261002f91610279565b818161003b8282610044565b50505050610369565b61004d826100a3565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561009757610092828261011f565b505050565b61009f610196565b5050565b806001600160a01b03163b6000036100de57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161013c919061034d565b600060405180830381855af49150503d8060008114610177576040519150601f19603f3d011682016040523d82523d6000602084013e61017c565b606091505b50909250905061018d8583836101b7565b95945050505050565b34156101b55760405163b398979f60e01b815260040160405180910390fd5b565b6060826101cc576101c782610216565b61020f565b81511580156101e357506001600160a01b0384163b155b1561020c57604051639996b31560e01b81526001600160a01b03851660048201526024016100d5565b50805b9392505050565b8051156102265780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015610270578181015183820152602001610258565b50506000910152565b6000806040838503121561028c57600080fd5b82516001600160a01b03811681146102a357600080fd5b60208401519092506001600160401b038111156102bf57600080fd5b8301601f810185136102d057600080fd5b80516001600160401b038111156102e9576102e961023f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156103175761031761023f565b60405281815282820160200187101561032f57600080fd5b610340826020830160208601610255565b8093505050509250929050565b6000825161035f818460208701610255565b9190910192915050565b60b7806103776000396000f3fe6080604052600a600c565b005b60186014601a565b605e565b565b600060597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e808015607c573d6000f35b3d6000fdfea264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x42E CODESIZE SUB DUP1 PUSH2 0x42E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x279 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x3B DUP3 DUP3 PUSH2 0x44 JUMP JUMPDEST POP POP POP POP PUSH2 0x369 JUMP JUMPDEST PUSH2 0x4D DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x97 JUMPI PUSH2 0x92 DUP3 DUP3 PUSH2 0x11F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9F PUSH2 0x196 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x177 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x18D DUP6 DUP4 DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1CC JUMPI PUSH2 0x1C7 DUP3 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD5 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x226 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x270 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x258 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH2 0x2E9 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x317 JUMPI PUSH2 0x317 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x340 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x255 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x35F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB7 DUP1 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x59 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xF8 0xD7 INVALID PUSH10 0x4F24F77D0CFB71D513B7 0xEB 0xA5 SHL DUP9 0xE6 SWAP9 PUSH0 PC 0xBD SWAP11 0xBB SSTORE PUSH20 0x1B68881F64736F6C634300081C00330000000000 ",
							"sourceMap": "224:166:8:-:0;;;272:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;363:14;379:5;1155:52:1;363:14:8;379:5;1155:29:1;:52::i;:::-;1081:133;;272:116:8;;224:166;;2264:344:2;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:2;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2264:344;;:::o;2454:148::-;2573:18;:16;:18::i;:::-;2264:344;;:::o;1671:281::-;1748:17;-1:-1:-1;;;;;1748:29:2;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:2;;-1:-1:-1;;;;;1652:32:9;;1805:47:2;;;1634:51:9;1607:18;;1805:47:2;;;;;;;;1744:119;811:66;1872:73;;-1:-1:-1;;;;;;1872:73:2;-1:-1:-1;;;;;1872:73:2;;;;;;;;;;1671:281::o;3916:253:5:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:5;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4023:67:5;;-1:-1:-1;4023:67:5;-1:-1:-1;4107:55:5;4134:6;4023:67;;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:5:o;6113:122:2:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:2;;;;;;;;;;;6159:70;6113:122::o;4437:582:5:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:5;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:5;;-1:-1:-1;;;;;1652:32:9;;4933:24:5;;;1634:51:9;1607:18;;4933:24:5;1488:203:9;4853:119:5;-1:-1:-1;4992:10:5;4605:408;4437:582;;;;;:::o;5559:487::-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:5;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:9;370:16;;363:27;146:250::o;401:1082::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:9;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;771:30:9;;768:50;;;814:1;811;804:12;768:50;837:22;;890:4;882:13;;878:27;-1:-1:-1;868:55:9;;919:1;916;909:12;868:55;946:9;;-1:-1:-1;;;;;967:30:9;;964:56;;;1000:18;;:::i;:::-;1049:2;1043:9;1141:2;1103:17;;-1:-1:-1;;1099:31:9;;;1132:2;1095:40;1091:54;1079:67;;-1:-1:-1;;;;;1161:34:9;;1197:22;;;1158:62;1155:88;;;1223:18;;:::i;:::-;1259:2;1252:22;1283;;;1324:15;;;1341:2;1320:24;1317:37;-1:-1:-1;1314:57:9;;;1367:1;1364;1357:12;1314:57;1380:72;1445:6;1440:2;1432:6;1428:15;1423:2;1419;1415:11;1380:72;:::i;:::-;1471:6;1461:16;;;;;401:1082;;;;;:::o;1696:287::-;1825:3;1863:6;1857:13;1879:66;1938:6;1933:3;1926:4;1918:6;1914:17;1879:66;:::i;:::-;1961:16;;;;;1696:287;-1:-1:-1;;1696:287:9:o;:::-;224:166:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_363": {
									"entryPoint": 94,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_379": {
									"entryPoint": 12,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_57": {
									"entryPoint": 26,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b60186014601a565b605e565b565b600060597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e808015607c573d6000f35b3d6000fdfea264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x59 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x7C JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xF8 0xD7 INVALID PUSH10 0x4F24F77D0CFB71D513B7 0xEB 0xA5 SHL DUP9 0xE6 SWAP9 PUSH0 PC 0xBD SWAP11 0xBB SSTORE PUSH20 0x1B68881F64736F6C634300081C00330000000000 ",
							"sourceMap": "224:166:8:-:0;;;2649:11:3;:9;:11::i;:::-;224:166:8;2323:83:3;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1583:132:1:-;1650:7;1676:32;811:66:2;1519:53;;;;1441:138;1676:32:1;1669:39;;1583:132;:::o;949:895:3:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 390,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 390,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 272,
									"end": 388,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 388,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 272,
									"end": 388,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 272,
									"end": 388,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 272,
									"end": 388,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 272,
									"end": 388,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 272,
									"end": 388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 272,
									"end": 388,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 363,
									"end": 377,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 379,
									"end": 384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 363,
									"end": 377,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 379,
									"end": 384,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1155,
									"end": 1207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 272,
									"end": 388,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 272,
									"end": 388,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 224,
									"end": 390,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 224,
									"end": 390,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2374,
									"end": 2391,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2355,
									"end": 2392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2355,
									"end": 2392,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2443,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2458,
									"end": 2473,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2518,
									"end": 2535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2537,
									"end": 2541,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2489,
									"end": 2542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2542,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2454,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2573,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2573,
									"end": 2591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2264,
									"end": 2608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1671,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1748,
									"end": 1765,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1748,
									"end": 1777,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1782,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1634,
									"end": 1685,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1805,
									"end": 1852,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1744,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 811,
									"end": 877,
									"name": "PUSH",
									"source": 2,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1872,
									"end": 1945,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1952,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3999,
									"end": 4011,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4024,
									"end": 4036,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4038,
									"end": 4061,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4071,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4084,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4085,
									"end": 4089,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 4065,
									"end": 4090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DELEGATECALL",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4065,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 4134,
									"end": 4140,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4023,
									"end": 4090,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4107,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 4107,
									"end": 4162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 4107,
									"end": 4162,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4100,
									"end": 4162,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 3916,
									"end": 4169,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3916,
									"end": 4169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6163,
									"end": 6172,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6163,
									"end": 6176,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4581,
									"end": 4593,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 4610,
									"end": 4617,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4641,
									"end": 4651,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4640,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4633,
									"end": 4652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4633,
									"end": 4652,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4874,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4874,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4879,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4901,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 4883,
									"end": 4906,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1684,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1685,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1607,
									"end": 1625,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4933,
									"end": 4957,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1488,
									"end": 1691,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 4853,
									"end": 4972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4992,
									"end": 5002,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 4605,
									"end": 5013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4437,
									"end": 5019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5559,
									"end": 6046,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5559,
									"end": 6046,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5707,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5690,
									"end": 5711,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5887,
									"end": 5897,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5881,
									"end": 5898,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5943,
									"end": 5958,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5930,
									"end": 5940,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5926,
									"end": 5928,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5922,
									"end": 5941,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5915,
									"end": 5959,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 5686,
									"end": 6040,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D6BDA275"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6010,
									"end": 6029,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 396,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 146,
									"end": 396,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 231,
									"end": 232,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 255,
									"end": 261,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 252,
									"end": 253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 249,
									"end": 262,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 331,
									"end": 342,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 325,
									"end": 343,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 312,
									"end": 323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 305,
									"end": 344,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 280,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 386,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 370,
									"end": 386,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 363,
									"end": 390,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 146,
									"end": 396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 489,
									"end": 495,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 503,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 547,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 529,
									"end": 536,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 525,
									"end": 548,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 521,
									"end": 553,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 518,
									"end": 570,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 518,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 518,
									"end": 570,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 592,
									"end": 608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 592,
									"end": 608,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 627,
									"end": 669,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 627,
									"end": 669,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 617,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 683,
									"end": 684,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 681,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 673,
									"end": 685,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 617,
									"end": 687,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 755,
									"end": 757,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 740,
									"end": 758,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 734,
									"end": 759,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 771,
									"end": 801,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 771,
									"end": 801,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 768,
									"end": 818,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 768,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 768,
									"end": 818,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 814,
									"end": 815,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 812,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 816,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 768,
									"end": 818,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 768,
									"end": 818,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 837,
									"end": 859,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 837,
									"end": 859,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 890,
									"end": 894,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 882,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 882,
									"end": 895,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 878,
									"end": 905,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 868,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 868,
									"end": 923,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 919,
									"end": 920,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 917,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 909,
									"end": 921,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 868,
									"end": 923,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 868,
									"end": 923,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 946,
									"end": 955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 946,
									"end": 955,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 967,
									"end": 997,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 967,
									"end": 997,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 964,
									"end": 1020,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1000,
									"end": 1018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1000,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1052,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1103,
									"end": 1120,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1103,
									"end": 1120,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1130,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1134,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 1095,
									"end": 1135,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1091,
									"end": 1145,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1079,
									"end": 1146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1079,
									"end": 1146,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1161,
									"end": 1195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1195,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1158,
									"end": 1220,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1155,
									"end": 1243,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1223,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1223,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1259,
									"end": 1261,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1252,
									"end": 1274,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1305,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1324,
									"end": 1339,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1320,
									"end": 1344,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1317,
									"end": 1354,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1367,
									"end": 1368,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1365,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1357,
									"end": 1369,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1314,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1445,
									"end": 1451,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1442,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1432,
									"end": 1438,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1428,
									"end": 1443,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1425,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1415,
									"end": 1426,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1380,
									"end": 1452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1380,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1477,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1477,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 401,
									"end": 1483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1828,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1863,
									"end": 1869,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1870,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1933,
									"end": 1936,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1926,
									"end": 1930,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1924,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1914,
									"end": 1931,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1879,
									"end": 1945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1879,
									"end": 1945,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1696,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1696,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 224,
									"end": 390,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 390,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 390,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 390,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 224,
									"end": 390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 390,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031f8d7fe694f24f77d0cfb71d513b7eba51b88e6985f58bd9abb55731b68881f64736f6c634300081c0033",
									".code": [
										{
											"begin": 224,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 390,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"Generic proxy contract for any UUPS upgradeable contract\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"title\":\"GenericUUPSProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy.sol\":\"GenericUUPSProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"proxy.sol\":{\"keccak256\":\"0xc9d62d57cc37075cc21c5967c5e0756f1a2a2f031206d9ea8020616dd620a184\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://117d2d0f21d42f4ff718b2abc08398eb4a7e5a14c4c86ef6db2661d42b9fa57d\",\"dweb:/ipfs/QmQoAEv9hUjH4pghS6hrLAmUcMLCKKq4UpUpbgztEbGKQS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							20
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:0",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IERC1967",
							"nameLocation": "245:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 7,
									"name": "Upgraded",
									"nameLocation": "339:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "348:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:0"
									},
									"src": "333:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 14,
									"name": "AdminChanged",
									"nameLocation": "464:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "477:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "500:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:0"
									},
									"src": "458:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 19,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "609:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:0"
									},
									"src": "588:45:0"
								}
							],
							"scope": 21,
							"src": "235:400:0",
							"usedErrors": [],
							"usedEvents": [
								7,
								14,
								19
							]
						}
					],
					"src": "107:529:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							58
						],
						"ERC1967Utils": [
							352
						],
						"Proxy": [
							388
						]
					},
					"id": 59,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 389,
							"src": "140:35:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 23,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 388,
										"src": "148:5:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "./ERC1967Utils.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 353,
							"src": "176:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 25,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 352,
										"src": "184:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Proxy",
										"nameLocations": [
											"625:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "625:5:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "625:5:1"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "226:373:1",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58,
								388
							],
							"name": "ERC1967Proxy",
							"nameLocation": "609:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1145:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1185:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 41,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1201:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 37,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1155:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$352_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1168:16:1",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "1155:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1155:52:1"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "637:439:1",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1101:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1093:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1130:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1117:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 33,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1117:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:44:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:0:1"
									},
									"scope": 58,
									"src": "1081:133:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "1659:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 52,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1676:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$352_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1689:17:1",
														"memberName": "getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "1676:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 51,
												"id": 55,
												"nodeType": "Return",
												"src": "1669:39:1"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1220:358:1",
										"text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1592:15:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 48,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1632:8:1"
									},
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:2:1"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1650:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:1"
									},
									"scope": 58,
									"src": "1583:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 59,
							"src": "600:1117:1",
							"usedErrors": [
								78,
								91,
								408,
								671
							],
							"usedEvents": [
								7
							]
						}
					],
					"src": "114:1604:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							658
						],
						"ERC1967Utils": [
							352
						],
						"IBeacon": [
							398
						],
						"IERC1967": [
							20
						],
						"StorageSlot": [
							804
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 62,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 399,
							"src": "140:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 61,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 398,
										"src": "148:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 64,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 21,
							"src": "187:55:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 63,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 20,
										"src": "195:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 66,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 659,
							"src": "243:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 65,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "251:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 805,
							"src": "292:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 67,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "300:11:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:2",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 73,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "763:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 71,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 72,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:2",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 78,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "993:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:2"
									},
									"src": "958:59:2"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:2",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 83,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1114:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:2"
									},
									"src": "1088:41:2"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:2",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 88,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1228:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:2"
									},
									"src": "1201:43:2"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:2",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 91,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:2"
									},
									"src": "1337:26:2"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1502:77:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 99,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1546:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 97,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1519:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 715,
															"src": "1519:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 685,
													"src": "1519:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 96,
												"id": 102,
												"nodeType": "Return",
												"src": "1512:60:2"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:2",
										"text": " @dev Returns the current implementation address."
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:2"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:2"
									},
									"scope": 352,
									"src": "1441:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1734:218:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 110,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "1748:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1744:119:2",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "1784:79:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 116,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "1834:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 115,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1805:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "1798:54:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 124,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1899:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 121,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1872:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 715,
																"src": "1872:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "1872:53:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1928:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:2"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:2",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1699:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:2"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:2"
									},
									"scope": 352,
									"src": "1671:281:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2345:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2374:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 139,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2355:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 146,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2425:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 143,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "2407:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$20_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:2",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "2407:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "2402:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 149,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2458:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 164,
													"nodeType": "Block",
													"src": "2559:43:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 161,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "2573:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:2"
														}
													]
												},
												"id": 165,
												"nodeType": "IfStatement",
												"src": "2454:148:2",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "2475:78:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 156,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "2518:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 157,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "2537:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 153,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "2489:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$658_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 575,
																	"src": "2489:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:2",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2290:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2317:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:2"
									},
									"scope": 352,
									"src": "2264:344:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:2",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 171,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2829:105:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 169,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "3339:68:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 179,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "3383:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 177,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "3356:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 715,
															"src": "3356:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 685,
													"src": "3356:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 176,
												"id": 182,
												"nodeType": "Return",
												"src": "3349:51:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:2",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "3330:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:2"
									},
									"scope": 352,
									"src": "3287:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3535:172:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "3549:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 191,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "3545:91:2",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3573:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 197,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 196,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "3594:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 202,
															"nodeType": "RevertStatement",
															"src": "3587:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 208,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "3672:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 205,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "3645:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 715,
																"src": "3645:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "3645:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "3692:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:2",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3509:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:2"
									},
									"scope": 352,
									"src": "3490:217:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3875:94:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 224,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "3912:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3924:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 221,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "3890:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$20_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:2",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "3890:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "3885:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3953:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 229,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3943:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:2"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:2",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3848:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:2"
									},
									"scope": 352,
									"src": "3827:142:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:2",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 238,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "4246:106:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 236,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "4468:69:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 246,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "4512:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 244,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "4485:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 715,
															"src": "4485:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 685,
													"src": "4485:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "4478:52:2"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:2",
										"text": " @dev Returns the current beacon."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4459:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:2"
									},
									"scope": 352,
									"src": "4415:122:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "4667:390:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 257,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "4681:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 267,
												"nodeType": "IfStatement",
												"src": "4677:95:2",
												"trueBody": {
													"id": 266,
													"nodeType": "Block",
													"src": "4709:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 263,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "4751:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 262,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "4730:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 265,
															"nodeType": "RevertStatement",
															"src": "4723:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 271,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "4809:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "4782:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$804_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 715,
																"src": "4782:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$686_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "4782:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 274,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "4830:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:2"
											},
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "4850:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 277,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 280,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "4889:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 279,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4881:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$398_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$398",
																"typeString": "contract IBeacon"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:2",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 397,
														"src": "4881:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 285,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "4930:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "4926:125:2",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "4969:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 291,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "5019:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 290,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "4990:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 293,
															"nodeType": "RevertStatement",
															"src": "4983:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:2",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4640:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:2"
									},
									"scope": 352,
									"src": "4620:437:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "5661:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5682:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 305,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "5671:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 312,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5731:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 309,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "5707:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$20_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:2",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "5707:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "EmitStatement",
												"src": "5702:39:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "5875:43:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 331,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "5889:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 333,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:2"
														}
													]
												},
												"id": 335,
												"nodeType": "IfStatement",
												"src": "5752:166:2",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "5773:96:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 323,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 300,
																						"src": "5824:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 322,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 398,
																					"src": "5816:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$398_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$398",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:2",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 397,
																			"src": "5816:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 327,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "5853:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 319,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "5787:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$658_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 575,
																	"src": "5787:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:2",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5614:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5633:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:2"
									},
									"scope": 352,
									"src": "5582:342:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6149:86:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 341,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "IfStatement",
												"src": "6159:70:2",
												"trueBody": {
													"id": 348,
													"nodeType": "Block",
													"src": "6178:51:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 345,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "6199:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 347,
															"nodeType": "RevertStatement",
															"src": "6192:26:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:2",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:2"
									},
									"scope": 352,
									"src": "6113:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 353,
							"src": "496:5741:2",
							"usedErrors": [
								78,
								83,
								88,
								91
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:3",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "Proxy",
							"nameLocation": "742:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "1009:835:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1028:810:3",
													"nodeType": "YulBlock",
													"src": "1028:810:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1287:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:3"
																		},
																		"nativeSrc": "1287:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1268:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:3"
																},
																"nativeSrc": "1268:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1268:34:3"
															},
															"nativeSrc": "1268:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:3"
														},
														{
															"nativeSrc": "1429:74:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1456:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:3"
																		},
																		"nativeSrc": "1456:5:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:3"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1463:14:3",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1482:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:3"
																		},
																		"nativeSrc": "1482:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1443:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:3"
																},
																"nativeSrc": "1443:60:3",
																"nodeType": "YulFunctionCall",
																"src": "1443:60:3"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1433:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1577:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:3"
																		},
																		"nativeSrc": "1577:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:3"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1556:14:3",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:3"
																},
																"nativeSrc": "1556:38:3",
																"nodeType": "YulFunctionCall",
																"src": "1556:38:3"
															},
															"nativeSrc": "1556:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1689:59:3",
																		"nodeType": "YulBlock",
																		"src": "1689:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1714:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1717:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:3"
																							},
																							"nativeSrc": "1717:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:3"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1707:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:3"
																					},
																					"nativeSrc": "1707:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:3"
																				},
																				"nativeSrc": "1707:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1682:66:3",
																	"nodeType": "YulCase",
																	"src": "1682:66:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1687:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:3",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1769:59:3",
																		"nodeType": "YulBlock",
																		"src": "1769:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1794:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1797:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:3"
																							},
																							"nativeSrc": "1797:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:3"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1787:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:3"
																					},
																					"nativeSrc": "1787:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:3"
																				},
																				"nativeSrc": "1787:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1761:67:3",
																	"nodeType": "YulCase",
																	"src": "1761:67:3",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1615:6:3",
																"nodeType": "YulIdentifier",
																"src": "1615:6:3"
															},
															"nativeSrc": "1608:220:3",
															"nodeType": "YulSwitch",
															"src": "1608:220:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 358,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:3",
														"valueSize": 1
													}
												],
												"id": 361,
												"nodeType": "InlineAssembly",
												"src": "1019:819:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:3",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "968:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:3"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:3"
									},
									"scope": 388,
									"src": "949:895:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:3",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2086:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:3"
									},
									"scope": 388,
									"src": "2028:67:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2361:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 374,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "2381:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 373,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2371:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:3"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:3",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:3"
									},
									"scope": 388,
									"src": "2323:83:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2639:28:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 383,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "2649:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:3"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:3",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 387,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:3"
									},
									"scope": 388,
									"src": "2603:64:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "724:1945:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							398
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:4",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "IBeacon",
							"nameLocation": "224:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:4",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "460:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:4"
									},
									"scope": 398,
									"src": "411:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 399,
							"src": "214:257:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							658
						],
						"Errors": [
							680
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 681,
							"src": "127:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 680,
										"src": "135:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "Address",
							"nameLocation": "241:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 408,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "358:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:5"
									},
									"src": "335:39:5"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "1361:294:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 418,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																],
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 416,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 421,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1399:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 435,
												"nodeType": "IfStatement",
												"src": "1371:125:5",
												"trueBody": {
													"id": 434,
													"nodeType": "Block",
													"src": "1407:89:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 428,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				],
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 426,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 431,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "1478:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 423,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "1428:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$680_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "1428:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 433,
															"nodeType": "RevertStatement",
															"src": "1421:64:5"
														}
													]
												}
											},
											{
												"assignments": [
													437,
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "1507:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "1521:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 438,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 440,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "1548:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "1570:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:5"
											},
											{
												"condition": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:5",
													"subExpression": {
														"id": 447,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "1596:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "1591:58:5",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "1605:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 450,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "1627:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 449,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "1619:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1309:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:5"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:5"
									},
									"scope": 658,
									"src": "1290:365:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "2589:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "2628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "2636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 466,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 465,
												"id": 471,
												"nodeType": "Return",
												"src": "2599:45:5"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2522:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2538:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:5"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:5"
									},
									"scope": 658,
									"src": "2500:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3088:294:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 487,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$658",
																		"typeString": "library Address"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 490,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3126:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3098:123:5",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3133:88:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 497,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$658",
																						"typeString": "library Address"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 500,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "3204:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 492,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "3154:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$680_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "3154:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3147:63:5"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3231:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3245:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3298:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3272:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3291:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3347:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3355:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3364:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3320:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 484,
												"id": 521,
												"nodeType": "Return",
												"src": "3313:62:5"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3006:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3022:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3041:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3074:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:5"
									},
									"scope": 658,
									"src": "2975:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3621:154:5",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3632:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3646:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3673:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3740:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3748:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3757:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3713:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3706:62:5"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3565:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:5"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3607:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:5"
									},
									"scope": 658,
									"src": "3521:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4013:156:5",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4024:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4038:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4085:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4065:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4134:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4142:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4151:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4107:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4100:62:5"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3946:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3962:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:5"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3999:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:5"
									},
									"scope": 658,
									"src": "3916:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4595:424:5",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:5",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4610:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4669:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "4857:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "4883:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "4853:119:5",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "4908:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "4950:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 408,
																				"src": "4933:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "4992:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "4985:17:5"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4605:408:5",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4619:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4641:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "4633:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4482:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4506:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4528:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4581:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:5"
									},
									"scope": 658,
									"src": "4437:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5323:122:5",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:5",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5338:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5397:42:5",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5418:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5411:17:5"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5333:106:5",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5347:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5369:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "5361:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5247:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5261:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:5"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5309:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:5"
									},
									"scope": 658,
									"src": "5221:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "5614:432:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5690:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "5989:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 649,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "6010:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$680_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:5",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 671,
																	"src": "6010:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 653,
															"nodeType": "RevertStatement",
															"src": "6003:26:5"
														}
													]
												},
												"id": 655,
												"nodeType": "IfStatement",
												"src": "5686:354:5",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5713:270:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:5",
																"nodeType": "YulBlock",
																"src": "5840:133:5",
																"statements": [
																	{
																		"nativeSrc": "5858:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:5"
																			},
																			"nativeSrc": "5881:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:5",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:5",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:5"
																					},
																					"nativeSrc": "5922:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:5"
																			},
																			"nativeSrc": "5915:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:5"
																		},
																		"nativeSrc": "5915:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:5"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:5",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "5815:158:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5576:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:5"
									},
									"scope": 658,
									"src": "5559:487:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 659,
							"src": "233:5815:5",
							"usedErrors": [
								408
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							680
						]
					},
					"id": 681,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:6",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 680,
							"linearizedBaseContracts": [
								680
							],
							"name": "Errors",
							"nameLocation": "419:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 668,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "557:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "574:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:6"
									},
									"src": "531:59:6"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 671,
									"name": "FailedCall",
									"nameLocation": "696:10:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:6"
									},
									"src": "690:19:6"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:6",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 674,
									"name": "FailedDeployment",
									"nameLocation": "772:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:6"
									},
									"src": "766:25:6"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:6",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 679,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "884:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:6"
									},
									"src": "860:33:6"
								}
							],
							"scope": 681,
							"src": "411:484:6",
							"usedErrors": [
								668,
								671,
								674,
								679
							],
							"usedEvents": []
						}
					],
					"src": "100:796:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 682,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 683,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 686,
									"members": [
										{
											"constant": false,
											"id": 685,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 686,
											"src": "1462:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 684,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1433:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 689,
									"members": [
										{
											"constant": false,
											"id": 688,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 689,
											"src": "1517:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 687,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1488:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 692,
									"members": [
										{
											"constant": false,
											"id": 691,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 692,
											"src": "1569:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 690,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1540:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 695,
									"members": [
										{
											"constant": false,
											"id": 694,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 695,
											"src": "1624:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 693,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1595:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 698,
									"members": [
										{
											"constant": false,
											"id": 697,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "1678:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 696,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1650:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 701,
									"members": [
										{
											"constant": false,
											"id": 700,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 701,
											"src": "1731:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 699,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1703:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 704,
									"members": [
										{
											"constant": false,
											"id": 703,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 704,
											"src": "1783:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 702,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:7",
									"nodeType": "StructDefinition",
									"scope": 804,
									"src": "1756:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1983:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:7",
													"nodeType": "YulBlock",
													"src": "2018:38:7",
													"statements": [
														{
															"nativeSrc": "2032:14:7",
															"nodeType": "YulAssignment",
															"src": "2032:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:7",
																"nodeType": "YulIdentifier",
																"src": "2042:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 711,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 707,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 713,
												"nodeType": "InlineAssembly",
												"src": "1993:63:7"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1923:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 706,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:7"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1960:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 709,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 686,
														"src": "1960:11:7"
													},
													"referencedDeclaration": 686,
													"src": "1960:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$686_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:7"
									},
									"scope": 804,
									"src": "1899:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "2243:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:7",
													"nodeType": "YulBlock",
													"src": "2278:38:7",
													"statements": [
														{
															"nativeSrc": "2292:14:7",
															"nodeType": "YulAssignment",
															"src": "2292:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:7",
																"nodeType": "YulIdentifier",
																"src": "2302:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 722,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 724,
												"nodeType": "InlineAssembly",
												"src": "2253:63:7"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:7",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2183:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2220:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$689_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 689,
														"src": "2220:11:7"
													},
													"referencedDeclaration": 689,
													"src": "2220:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$689_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:7"
									},
									"scope": 804,
									"src": "2159:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2503:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:7",
													"nodeType": "YulBlock",
													"src": "2538:38:7",
													"statements": [
														{
															"nativeSrc": "2552:14:7",
															"nodeType": "YulAssignment",
															"src": "2552:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:7",
																"nodeType": "YulIdentifier",
																"src": "2562:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 733,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 729,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 735,
												"nodeType": "InlineAssembly",
												"src": "2513:63:7"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:7",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2443:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:7"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2480:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$692_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 732,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 731,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 692,
														"src": "2480:11:7"
													},
													"referencedDeclaration": 692,
													"src": "2480:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$692_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:7"
									},
									"scope": 804,
									"src": "2419:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "2763:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:7",
													"nodeType": "YulBlock",
													"src": "2798:38:7",
													"statements": [
														{
															"nativeSrc": "2812:14:7",
															"nodeType": "YulAssignment",
															"src": "2812:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:7",
																"nodeType": "YulIdentifier",
																"src": "2822:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 744,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 740,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 746,
												"nodeType": "InlineAssembly",
												"src": "2773:63:7"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:7",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2703:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2740:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$695_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 742,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 695,
														"src": "2740:11:7"
													},
													"referencedDeclaration": 695,
													"src": "2740:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$695_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:7"
									},
									"scope": 804,
									"src": "2679:163:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "3020:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:7",
													"nodeType": "YulBlock",
													"src": "3055:38:7",
													"statements": [
														{
															"nativeSrc": "3069:14:7",
															"nodeType": "YulAssignment",
															"src": "3069:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:7",
																"nodeType": "YulIdentifier",
																"src": "3079:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "3030:63:7"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:7",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2961:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:7"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2998:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$698_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 698,
														"src": "2998:10:7"
													},
													"referencedDeclaration": 698,
													"src": "2998:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$698_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:7"
									},
									"scope": 804,
									"src": "2938:161:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3277:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:7",
													"nodeType": "YulBlock",
													"src": "3312:38:7",
													"statements": [
														{
															"nativeSrc": "3326:14:7",
															"nodeType": "YulAssignment",
															"src": "3326:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:7",
																"nodeType": "YulIdentifier",
																"src": "3336:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 768,
												"nodeType": "InlineAssembly",
												"src": "3287:63:7"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:7",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3218:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:7"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3255:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 764,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 701,
														"src": "3255:10:7"
													},
													"referencedDeclaration": 701,
													"src": "3255:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:7"
									},
									"scope": 804,
									"src": "3195:161:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "3558:85:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:7",
													"nodeType": "YulBlock",
													"src": "3593:44:7",
													"statements": [
														{
															"nativeSrc": "3607:20:7",
															"nodeType": "YulAssignment",
															"src": "3607:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:7",
																"nodeType": "YulIdentifier",
																"src": "3617:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 777,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 773,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 779,
												"nodeType": "InlineAssembly",
												"src": "3568:69:7"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "3491:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 772,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:7"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "3536:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 776,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 775,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 701,
														"src": "3536:10:7"
													},
													"referencedDeclaration": 701,
													"src": "3536:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$701_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:7"
									},
									"scope": 804,
									"src": "3468:175:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "3818:79:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:7",
													"nodeType": "YulBlock",
													"src": "3853:38:7",
													"statements": [
														{
															"nativeSrc": "3867:14:7",
															"nodeType": "YulAssignment",
															"src": "3867:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:7",
																"nodeType": "YulIdentifier",
																"src": "3877:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 788,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 790,
												"nodeType": "InlineAssembly",
												"src": "3828:63:7"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:7",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3760:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 783,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:7"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3797:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 704,
														"src": "3797:9:7"
													},
													"referencedDeclaration": 704,
													"src": "3797:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:7"
									},
									"scope": 804,
									"src": "3738:159:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "4094:85:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:7",
													"nodeType": "YulBlock",
													"src": "4129:44:7",
													"statements": [
														{
															"nativeSrc": "4143:20:7",
															"nodeType": "YulAssignment",
															"src": "4143:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:7",
																"nodeType": "YulIdentifier",
																"src": "4153:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 799,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 801,
												"nodeType": "InlineAssembly",
												"src": "4104:69:7"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4029:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:7"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4073:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 797,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 704,
														"src": "4073:9:7"
													},
													"referencedDeclaration": 704,
													"src": "4073:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$704_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:7"
									},
									"scope": 804,
									"src": "4007:172:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 805,
							"src": "1407:2774:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:7"
				},
				"id": 7
			},
			"proxy.sol": {
				"ast": {
					"absolutePath": "proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							58
						],
						"ERC1967Utils": [
							352
						],
						"GenericProxyDeployer": [
							897
						],
						"GenericUUPSProxy": [
							823
						],
						"Proxy": [
							388
						]
					},
					"id": 898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"id": 807,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 898,
							"sourceUnit": 59,
							"src": "58:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 809,
										"name": "ERC1967Proxy",
										"nameLocations": [
											"253:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 58,
										"src": "253:12:8"
									},
									"id": 810,
									"nodeType": "InheritanceSpecifier",
									"src": "253:12:8"
								}
							],
							"canonicalName": "GenericUUPSProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 808,
								"nodeType": "StructuredDocumentation",
								"src": "124:99:8",
								"text": " @title GenericUUPSProxy\n @dev Generic proxy contract for any UUPS upgradeable contract"
							},
							"fullyImplemented": true,
							"id": 823,
							"linearizedBaseContracts": [
								823,
								58,
								388
							],
							"name": "GenericUUPSProxy",
							"nameLocation": "233:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "386:2:8",
										"statements": []
									},
									"id": 822,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 817,
													"name": "implementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 812,
													"src": "363:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 818,
													"name": "_data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 814,
													"src": "379:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 819,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 816,
												"name": "ERC1967Proxy",
												"nameLocations": [
													"350:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "350:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "350:35:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "301:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "293:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "338:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "325:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:66:8"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:0:8"
									},
									"scope": 823,
									"src": "272:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 898,
							"src": "224:166:8",
							"usedErrors": [
								78,
								91,
								408,
								671
							],
							"usedEvents": [
								7
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GenericProxyDeployer",
							"contractDependencies": [
								823
							],
							"contractKind": "contract",
							"documentation": {
								"id": 824,
								"nodeType": "StructuredDocumentation",
								"src": "392:126:8",
								"text": " @title GenericProxyDeployer\n @dev Helper contract to deploy proxies for any contract with any initialization data"
							},
							"fullyImplemented": true,
							"id": 897,
							"linearizedBaseContracts": [
								897
							],
							"name": "GenericProxyDeployer",
							"nameLocation": "528:20:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "3d2489efb661e8b1c3679865db649ca1de61d76a71184a1234de2e55786a6aad",
									"id": 830,
									"name": "ProxyDeployed",
									"nameLocation": "561:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "591:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "575:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "614:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "598:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:55:8"
									},
									"src": "555:75:8"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "962:250:8",
										"statements": [
											{
												"assignments": [
													842
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "proxy",
														"nameLocation": "1017:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "1000:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
															"typeString": "contract GenericUUPSProxy"
														},
														"typeName": {
															"id": 841,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 840,
																"name": "GenericUUPSProxy",
																"nameLocations": [
																	"1000:16:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 823,
																"src": "1000:16:8"
															},
															"referencedDeclaration": 823,
															"src": "1000:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "1059:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "initData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "1087:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1025:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_GenericUUPSProxy_$823_$",
															"typeString": "function (address,bytes memory) returns (contract GenericUUPSProxy)"
														},
														"typeName": {
															"id": 844,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 843,
																"name": "GenericUUPSProxy",
																"nameLocations": [
																	"1029:16:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 823,
																"src": "1029:16:8"
															},
															"referencedDeclaration": 823,
															"src": "1029:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
														"typeString": "contract GenericUUPSProxy"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1000:105:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 853,
																	"name": "proxy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "1151:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																		"typeString": "contract GenericUUPSProxy"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																		"typeString": "contract GenericUUPSProxy"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1143:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1143:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "1159:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 850,
														"name": "ProxyDeployed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1129:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "EmitStatement",
												"src": "1124:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "1199:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														],
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1191:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 858,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1191:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 862,
												"nodeType": "Return",
												"src": "1184:21:8"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "640:198:8",
										"text": " @dev Deploy a proxy with custom initialization data\n @param implementation Address of the implementation contract\n @param initData Encoded initialization function call"
									},
									"functionSelector": "9f5eed75",
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deployProxy",
									"nameLocation": "852:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "881:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "873:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "initData",
												"nameLocation": "920:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "905:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "905:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:71:8"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "953:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:9:8"
									},
									"scope": 897,
									"src": "843:369:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "1489:275:8",
										"statements": [
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "proxy",
														"nameLocation": "1575:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "1558:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
															"typeString": "contract GenericUUPSProxy"
														},
														"typeName": {
															"id": 873,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 872,
																"name": "GenericUUPSProxy",
																"nameLocations": [
																	"1558:16:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 823,
																"src": "1558:16:8"
															},
															"referencedDeclaration": 823,
															"src": "1558:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [
														{
															"id": 878,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "1617:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1645:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1583:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_GenericUUPSProxy_$823_$",
															"typeString": "function (address,bytes memory) returns (contract GenericUUPSProxy)"
														},
														"typeName": {
															"id": 876,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 875,
																"name": "GenericUUPSProxy",
																"nameLocations": [
																	"1587:16:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 823,
																"src": "1587:16:8"
															},
															"referencedDeclaration": 823,
															"src": "1587:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1583:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
														"typeString": "contract GenericUUPSProxy"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1558:99:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 885,
																	"name": "proxy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "1703:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																		"typeString": "contract GenericUUPSProxy"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																		"typeString": "contract GenericUUPSProxy"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1695:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 883,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1695:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1695:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "1711:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 882,
														"name": "ProxyDeployed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1681:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1681:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "EmitStatement",
												"src": "1676:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "1751:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_GenericUUPSProxy_$823",
																"typeString": "contract GenericUUPSProxy"
															}
														],
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1743:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 890,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1743:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1743:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 871,
												"id": 894,
												"nodeType": "Return",
												"src": "1736:21:8"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "1222:165:8",
										"text": " @dev Deploy a proxy without initialization (for contracts with no initializer)\n @param implementation Address of the implementation contract"
									},
									"functionSelector": "08826ac1",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deployProxyWithoutInit",
									"nameLocation": "1401:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1441:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1433:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:38:8"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1480:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:9:8"
									},
									"scope": 897,
									"src": "1392:372:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 898,
							"src": "519:1247:8",
							"usedErrors": [],
							"usedEvents": [
								830
							]
						}
					],
					"src": "32:1734:8"
				},
				"id": 8
			}
		}
	}
}