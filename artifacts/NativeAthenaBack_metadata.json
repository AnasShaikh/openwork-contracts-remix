{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "AddressEmptyCode",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "ERC1967InvalidImplementation",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC1967NonPayable",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FailedCall",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidInitialization",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotInitializing",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "UUPSUnauthorizedCallContext",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "slot",
						"type": "bytes32"
					}
				],
				"name": "UUPSUnsupportedProxiableUUID",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "contractType",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "ContractReferenceUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					}
				],
				"name": "CrossChainClaimValidated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "jobId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					}
				],
				"name": "CrossChainDisputeValidated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "messageHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "action",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "CrossChainMessageProcessed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "question",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					}
				],
				"name": "CrossChainQuestionValidated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "skill",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					}
				],
				"name": "CrossChainSkillValidated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum NativeAthenaBack.DisputeStatus",
						"name": "newStatus",
						"type": "uint8"
					}
				],
				"name": "DisputeStatusChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "inFavor",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "weight",
						"type": "uint256"
					}
				],
				"name": "DisputeVoteCast",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "newFrontend",
						"type": "address"
					}
				],
				"name": "FrontendContractUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "version",
						"type": "uint64"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "reporter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "evidenceHash",
						"type": "string"
					}
				],
				"name": "MaliciousActorReported",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					}
				],
				"name": "OracleActivated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "description",
						"type": "string"
					}
				],
				"name": "OracleCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "OracleMemberAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "OracleMemberRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "paramName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newValue",
						"type": "uint256"
					}
				],
				"name": "ParameterUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "answerHash",
						"type": "string"
					}
				],
				"name": "QuestionAnswered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "inFavor",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "QuestionVoteCast",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "applicant",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "skillName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					}
				],
				"name": "SkillRejected",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "applicant",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "skillName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					}
				],
				"name": "SkillVerified",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "inFavor",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "SkillVoteCast",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "UPGRADE_INTERFACE_VERSION",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					}
				],
				"name": "calculateDisputeRefund",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "calculateDisputeReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "asker",
						"type": "address"
					}
				],
				"name": "calculateQuestionRefund",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "calculateQuestionReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "applicant",
						"type": "address"
					}
				],
				"name": "calculateSkillRefund",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "calculateSkillReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getCrossChainStats",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "disputeCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "skillCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "questionCount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDisputeCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					}
				],
				"name": "getDisputeDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "jobId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "initiator",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "respondent",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "reason",
								"type": "string"
							},
							{
								"internalType": "enum DisputeStorage.DisputeStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "resultDetermined",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "fundsReleased",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "lockedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "resolvedAt",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "evidence",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "assignedOracle",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "requiredVotes",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "oracleValidated",
								"type": "bool"
							}
						],
						"internalType": "struct DisputeStorage.Dispute",
						"name": "dispute",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "votesFor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "votesAgainst",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDisputeFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFrontendContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getQuestionCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					}
				],
				"name": "getQuestionDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "asker",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "questionHash",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "oracleName",
								"type": "string"
							},
							{
								"internalType": "enum QuestionStorage.QuestionStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "answeredAt",
								"type": "uint256"
							}
						],
						"internalType": "struct QuestionStorage.Question",
						"name": "question",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "votesFor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "votesAgainst",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getQuestionFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSkillApplicationCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					}
				],
				"name": "getSkillApplicationDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "applicant",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "skillName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "evidence",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "oracleName",
								"type": "string"
							},
							{
								"internalType": "enum SkillStorage.SkillStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "verifiedAt",
								"type": "uint256"
							}
						],
						"internalType": "struct SkillStorage.SkillApplication",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "applicant",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "skillName",
						"type": "string"
					}
				],
				"name": "getSkillApplicationId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSkillVerificationFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "applicant",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "skillName",
						"type": "string"
					}
				],
				"name": "isSkillVerified",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "payload",
						"type": "bytes"
					}
				],
				"name": "processCrossChainMessage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "jobId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "disputeHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "respondent",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lockedAmount",
						"type": "uint256"
					}
				],
				"name": "processDispute",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "escalator",
						"type": "address"
					}
				],
				"name": "processDisputeEscalation",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "resolver",
						"type": "address"
					}
				],
				"name": "processDisputeResolution",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "inFavor",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "reasonHash",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "processDisputeVote",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "evidenceHash",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "submitter",
						"type": "address"
					}
				],
				"name": "processEvidenceSubmission",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "questionHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "asker",
						"type": "address"
					}
				],
				"name": "processQuestion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "inFavor",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "reasonHash",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "processQuestionVote",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "skillName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "evidenceHash",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "applicant",
						"type": "address"
					}
				],
				"name": "processSkillApplication",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "inFavor",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "reasonHash",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "processSkillVote",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "proxiableUUID",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newContract",
						"type": "address"
					}
				],
				"name": "setDAOContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "frontendAddress",
						"type": "address"
					}
				],
				"name": "setFrontendContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newContract",
						"type": "address"
					}
				],
				"name": "setGovernanceActionTracker",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newContract",
						"type": "address"
					}
				],
				"name": "setNativeDAOGovernanceContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "skillOracleManagerAddress",
						"type": "address"
					}
				],
				"name": "setSkillOracleManager",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newFee",
						"type": "uint256"
					}
				],
				"name": "updateDisputeFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newPeriod",
						"type": "uint256"
					}
				],
				"name": "updateDisputeVotingPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newFee",
						"type": "uint256"
					}
				],
				"name": "updateQuestionFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newPeriod",
						"type": "uint256"
					}
				],
				"name": "updateQuestionVotingPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newFee",
						"type": "uint256"
					}
				],
				"name": "updateSkillVerificationFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newPeriod",
						"type": "uint256"
					}
				],
				"name": "updateSkillVotingPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "jobId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "disputeHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "usdtFee",
						"type": "uint256"
					}
				],
				"name": "validateCrossChainDispute",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "disputeId",
						"type": "uint256"
					}
				],
				"name": "validateCrossChainDisputeClaim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "question",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "contextHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "oracleName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "usdtFee",
						"type": "uint256"
					}
				],
				"name": "validateCrossChainQuestion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "questionId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "skill",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "proofHash",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "usdtFee",
						"type": "uint256"
					}
				],
				"name": "validateCrossChainSkillVerification",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "applicationId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Enhanced backend processing contract with cross-chain message handling Now includes all complex logic moved from the front contract",
			"errors": {
				"AddressEmptyCode(address)": [
					{
						"details": "There's no code at `target` (it is not a contract)."
					}
				],
				"ERC1967InvalidImplementation(address)": [
					{
						"details": "The `implementation` of the proxy is invalid."
					}
				],
				"ERC1967NonPayable()": [
					{
						"details": "An upgrade function sees `msg.value > 0` that may be lost."
					}
				],
				"FailedCall()": [
					{
						"details": "A call to an address target failed. The target may have reverted."
					}
				],
				"InvalidInitialization()": [
					{
						"details": "The contract is already initialized."
					}
				],
				"NotInitializing()": [
					{
						"details": "The contract is not initializing."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"UUPSUnauthorizedCallContext()": [
					{
						"details": "The call is from an unauthorized context."
					}
				],
				"UUPSUnsupportedProxiableUUID(bytes32)": [
					{
						"details": "The storage `slot` is unsupported as a UUID."
					}
				]
			},
			"events": {
				"Initialized(uint64)": {
					"details": "Triggered when the contract has been initialized or reinitialized."
				},
				"Upgraded(address)": {
					"details": "Emitted when the implementation is upgraded."
				}
			},
			"kind": "dev",
			"methods": {
				"initialize(address)": {
					"details": "Initialize the contract"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"processCrossChainMessage(bytes)": {
					"details": "Process cross-chain messages (moved from front contract)"
				},
				"processDispute(uint256,string,string,address,address,uint256)": {
					"details": "Process a dispute creation"
				},
				"processDisputeEscalation(uint256,address)": {
					"details": "Process dispute escalation"
				},
				"processDisputeResolution(uint256,address,address)": {
					"details": "Process dispute resolution"
				},
				"processDisputeVote(uint256,bool,string,address)": {
					"details": "Process dispute vote"
				},
				"processEvidenceSubmission(uint256,string,address)": {
					"details": "Process evidence submission"
				},
				"processQuestion(string,string,address)": {
					"details": "Process question creation"
				},
				"processQuestionVote(uint256,bool,string,address)": {
					"details": "Process question vote"
				},
				"processSkillApplication(string,string,string,address)": {
					"details": "Process skill application"
				},
				"processSkillVote(uint256,bool,string,address)": {
					"details": "Process skill vote"
				},
				"proxiableUUID()": {
					"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"upgradeToAndCall(address,bytes)": {
					"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
					"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
				},
				"validateCrossChainDispute(address,uint256,string,string,uint256)": {
					"details": "Validate cross-chain dispute (enhanced validation logic)"
				},
				"validateCrossChainDisputeClaim(address,uint256)": {
					"details": "Validate cross-chain dispute claim"
				},
				"validateCrossChainQuestion(address,string,string,string,uint256)": {
					"details": "Validate cross-chain question"
				},
				"validateCrossChainSkillVerification(address,string,string,uint256)": {
					"details": "Validate cross-chain skill verification"
				}
			},
			"title": "NativeAthenaBack",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"NativeAthenaB.sol": "NativeAthenaBack"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 300
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
			"license": "MIT",
			"urls": [
				"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
				"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
			"license": "MIT",
			"urls": [
				"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
				"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
			"keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
			"license": "MIT",
			"urls": [
				"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
				"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
			"keccak256": "0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b",
			"license": "MIT",
			"urls": [
				"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f",
				"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
			"license": "MIT",
			"urls": [
				"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
				"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1967.sol": {
			"keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
			"license": "MIT",
			"urls": [
				"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
				"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
			"keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
			"license": "MIT",
			"urls": [
				"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
				"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
			]
		},
		"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
			"keccak256": "0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898",
			"license": "MIT",
			"urls": [
				"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70",
				"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2"
			]
		},
		"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
			"keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
			"license": "MIT",
			"urls": [
				"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
				"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
			"license": "MIT",
			"urls": [
				"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
				"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
			]
		},
		"@openzeppelin/contracts/utils/Errors.sol": {
			"keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
			"license": "MIT",
			"urls": [
				"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
				"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
			]
		},
		"@openzeppelin/contracts/utils/StorageSlot.sol": {
			"keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
			"license": "MIT",
			"urls": [
				"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
				"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
			]
		},
		"IAthenaInterfaces.sol": {
			"keccak256": "0x8bb3e9a16c39a08419b72b16001384172d05b9f33f1a4bc92307c710023d904f",
			"license": "MIT",
			"urls": [
				"bzz-raw://892308df85a8b84d636d93930ffb3f3ec1763dcb912c26c2b358376e9e1d7b3a",
				"dweb:/ipfs/Qmf8Jtpm1w63BGaLPHa7LE1Lxhd1ksLZAKis5JYBcYeH9H"
			]
		},
		"NativeAthenaB.sol": {
			"keccak256": "0x06d27756b55e321c8b690508fb1487ecd2a8c8d6eb8a6a21de36086c5a2f8c89",
			"license": "MIT",
			"urls": [
				"bzz-raw://1f32883d59d2230aae7ef5dd1ced3c080073e31ad469513f1320101197976c9d",
				"dweb:/ipfs/QmVSj4nub4v5heRSRedLtH2tUDFk7WwHgAJUVKR8PaxrpT"
			]
		}
	},
	"version": 1
}